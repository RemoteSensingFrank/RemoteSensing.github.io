<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>吴蔚</title>
  
  <subtitle>生命不息，折腾不止！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.wuweiblog.com/"/>
  <updated>2020-08-07T09:45:53.734Z</updated>
  <id>http://www.wuweiblog.com/</id>
  
  <author>
    <name>John Doe Thanks the author of the theme</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>未知</title>
    <link href="http://www.wuweiblog.com/2020/08/07/%E6%9C%AA%E7%9F%A5/"/>
    <id>http://www.wuweiblog.com/2020/08/07/未知/</id>
    <published>2020-08-07T09:07:33.000Z</published>
    <updated>2020-08-07T09:45:53.734Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;这两天跟领导出了趟差，回来得还挺早的。晚上大家在一起聊了会天，有了很多感触。总是有一种感觉，就是不知道自己应该朝哪个方向走才对。一直不喜欢被评价为智商高，活着情商高，我一直觉得这很世故，让人缺少了一些锐气。我更愿意被认为是一个很有原则的人，怎奈自己是一个讨好型人格，真的很难拒绝别人的要求。<br>&nbsp;&nbsp;&nbsp;&nbsp;梳理一下最近想要做的事情，包括项目执行，考试，论文准备，目前来说主要就是这三件事情，其中又以准备考试最为重要，其实一直都知道考试的重要性性，也一直都想着能够早日考过，可是意志力实在不是很够，东摸西摸浪费了很多时间导致复习得不是很好，心里没有什么底气。工作之后就一直很怀念读书的那段时光，那段时间可以很专注的学习，很专心的看论文，不管是效率还是精力都比现在要强很多。到现在，也不知道是因为年纪大了还是因为事情太多太杂导致精力无法集中，总是要给自己不断强调，不断强调才能有一点点的动力，总是忍不住诱惑，刷新闻，段视频这种短暂的快乐和放松总是会占用自己大量的时间，耐心越来越差。<br>&nbsp;&nbsp;&nbsp;&nbsp;我知道也许我们是有些小聪明，但是缺少大毅力和大智慧，领导让我多想，我觉得自己也确实应该多想，应该多反思，实际上被人评价为聪明并不是多么好的一件事情，这个世界似乎也不缺少聪明人，相比而言我更愿意做一个有毅力的人。突然想起一个故事，说的是我们小时候看到的那些成语，我们总是以为自己懂了，这个世界上怎么会有买椟还珠的人，怎么会有刻舟求剑的人，怎么会有掩耳盗铃的人，实际上明明知道这些故事的我们又何尝不是在做着买椟还珠、掩耳盗铃的故事呢。<br>&nbsp;&nbsp;&nbsp;&nbsp;一直以来家庭的教育与视野让我很难面对未知放手一搏，所以我总是选择那条最能看清的路，我不知道这样到底好不好，或者说其实未知的路没有人能够看清，不过不管怎么样我们不能以小聪明来欺骗生活，我想我应该去学习大智慧，去磨练自己的意志，增强自己的专注力，增强自己的，小聪明或许能够抄的了一时的近路，但是靠着这些是不可能赢得生活的，希望自己加油。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这两天跟领导出了趟差，回来得还挺早的。晚上大家在一起聊了会天，有了很多感触。总是有一种感觉，就是不知道自己应该朝哪个方向走才对。一直不喜欢被评价为智商高，活着情商高，我一直觉得这很世故，让人缺少了一些锐气。我更愿意被认为是一个
      
    
    </summary>
    
    
      <category term="随感" scheme="http://www.wuweiblog.com/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>db.json</title>
    <link href="http://www.wuweiblog.com/2020/07/31/db-json/"/>
    <id>http://www.wuweiblog.com/2020/07/31/db-json/</id>
    <published>2020-07-31T03:31:46.000Z</published>
    <updated>2020-07-31T03:31:46.292Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>狗子日记十一月四号</title>
    <link href="http://www.wuweiblog.com/2020/07/30/%E7%8B%97%E5%AD%90%E6%97%A5%E8%AE%B0%E5%8D%81%E4%B8%80%E6%9C%88%E5%9B%9B%E5%8F%B7/"/>
    <id>http://www.wuweiblog.com/2020/07/30/狗子日记十一月四号/</id>
    <published>2020-07-30T14:35:21.400Z</published>
    <updated>2017-11-05T14:28:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>下午的时候刘艳在家打扫卫生，她突然很激动的跟我说：＂我捡到了一粒黑色的扣子！＂<br>我表示一脸茫然，怎么会有黑色扣子，难道是哪件衣服上掉的？于是我说：＂黑色扣子，怎么会有黑色扣子？＂<br>随后又传来一声尖叫:”啊～～～！”<br>把我吓了一跳，＂怎么啦！＂我赶紧问．然后出去看看发生了啥.<br>她看到我出来又很激动的跟我说：＂那个不是黑色的扣子，那个是菜包的屎，沾上了它的毛～气死我啦！＂<br>于是我们转头看向菜包，正趴在地上的菜包感觉到了我们两个人充满杀气的目光突然惊恐的站了起来：＂你们要干啥！你们不要这么看着本大王~＂<br>于是我们开始质问:”菜包，你怎么把你的粑粑弄到客厅来了~”<br>菜包一脸茫然：＂你在说什么，我完全听不懂的样子!＂<br>我们满头黑线:”….你又在装，看来每天不揍你你就不舒服呀！”，于是我抄起了我的拖鞋．<br>菜包吓得赶快翻肚皮：＂我冤枉呀～，我真的什么都不知道，你们就是打死我也没有用呀~＂<br>本着宁可错杀一千不能放过一个的原则，我们依然把菜包揍了一顿，然后心满意足的回房间了.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;下午的时候刘艳在家打扫卫生，她突然很激动的跟我说：＂我捡到了一粒黑色的扣子！＂&lt;br&gt;我表示一脸茫然，怎么会有黑色扣子，难道是哪件衣服上掉的？于是我说：＂黑色扣子，怎么会有黑色扣子？＂&lt;br&gt;随后又传来一声尖叫:”啊～～～！”&lt;br&gt;把我吓了一跳，＂怎么啦！＂我赶紧问．然后
      
    
    </summary>
    
      <category term="小说" scheme="http://www.wuweiblog.com/categories/%E5%B0%8F%E8%AF%B4/"/>
    
    
      <category term="狗子日记" scheme="http://www.wuweiblog.com/tags/%E7%8B%97%E5%AD%90%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>多想</title>
    <link href="http://www.wuweiblog.com/2020/07/14/%E5%A4%9A%E6%83%B3/"/>
    <id>http://www.wuweiblog.com/2020/07/14/多想/</id>
    <published>2020-07-14T11:09:00.000Z</published>
    <updated>2020-07-14T11:11:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;很久很久没有写点东西了，最近感觉有点颓废，家里装修的事情也是一拖再拖，到现在终于告一段落了，剩下的事情既不紧急也不重要。这2020年以可能对我来说是一个意义比较重大的年份吧，突然之间连升两级，其实自己有些措手不及的。有时候我在想，我们活在这个世界上的意义究竟是什么，名利钱财？这些东西似乎很重要，但是又似乎没有这么重要，实际上我觉得可能除了生死别的都没有多么重要吧。而活下去总是要给自己找个活下去的理由，那能不能没有理由的活下去呢？就找个工作，挣着一份工资，做着不是多么喜欢也谈不上讨厌的工作，每天似乎都很忙碌，有似乎什么都没有干，就这样混日子，然后一天天的老去到死亡？<br>&nbsp;&nbsp;&nbsp;&nbsp;最近看了很多谈论什么结婚率，生育率的问题，好像这是一个多么大的问题，但是我觉得其实这并不是什么问题，从宏观的角度来说，生育后代是为了人类基因的传递，这个理因是刻在我们基因中的需求，所以动物会发情，人会有性欲，这些欲望是如此强大以至于有时候能够完全盖过我们的理智。但是人毕竟不是动物，实际上我们可能错误的估计了理智思考对我们兽性基因的影响。人类毕竟比大多数动物更能够对自己有清醒的认识，理智和思考让我们学会了比较与度量，所以我们成功进化了，进化到我们的生活，生存不仅仅是对生理需求的满足，总还是想着要追求一些超脱于生理需求之外的东西，有的人把它称之为宗教，有的人叫做信仰，有的人叫理想。不管被称为什么，总之它对我们是有意义的，我们需要知道未来向哪个方向，而不是每天浑浑噩噩的生活，到死也不知道自己这一生究竟做了什么。<br>&nbsp;&nbsp;&nbsp;&nbsp;最近外婆去世了，很悲惨，又不是那么悲惨的去世了，我想每个人都会死的，外婆会去世，父母也会，自己也毫无疑问会去世，基于这样的思考，我对我爸妈表示出了极大的不理解，如果我们最终结果都是死亡，以什么样的形式死掉有什么区别呢？我想赌王在日散千金的ICU中死去和我外婆躺在床上死去好像也没有什么区别，盛大而隆重的葬礼似乎和简单热闹的葬礼也并不能改变什么，该死的还是要死不是么？所以我这一段时间总是在想死亡的问题，如果我注定是要死的，家庭、事业、爱情，这些东西好像都算不得什么，别人的看法，眼光好像也算得不什么，一帆风顺也并不能让你多活哪怕一秒钟，遭受世人的非议好像也无法让你少活一秒，这个是科技给我们带来的信心。<br>&nbsp;&nbsp;&nbsp;&nbsp;如果真的是这个样子那我们活在这个世界上想要遵循的原则到底是什么？我们生活的终极意义和目标在哪？终极意义就是满足我们兽性的欲望，或者说终极意义就是完全克制我们兽性的欲望？克制对食物，对性，对好奇，对被尊重的欲望。马斯洛的生存需求金字塔说我们需要被尊重，实际上我们可能不一定需要被尊重，我们可以“无缘”的活在这个世界，在法律的框架下，不与人产生交集，也就无所谓尊重或是鄙夷，他人的尊重我们不在乎，他人的鄙夷我们也不在乎，我们可以不婚、不育、不老，可能大家觉得不老这件事情好像不可思议，实际上也没有什么不可思议的，不老去只死去也就可以了，我们为什么要在乎这些呢？难道我们一出生就有了要买房子，要结婚生子的想法？这些难道不是这个世界给我们灌输的么？其实仔细想想我们可能并不在意是么？ 所以得多想，再多想，我们内心本质的需求到底是什么？什么是我们能够放弃的？我也许会渐渐想明白，也可能想不明白。如果我能够连自己的生命都能够放弃，那我们需要坚守的是什么？以前开过一个玩笑，同事说死不可怕，任务完不成才可怕，我说死都不怕还怕任务完不成，然后我们就哈哈哈哈起来。实际上至少对于我来说还没有什么是我坚信自己即使放弃生命也要坚守的东西，所以也许当我接受死亡的时候就真的不需要有任何顾虑了。可是说来也好笑，我对死亡的看法真的只有痛感而已了，可能我什么时候能够接受疼痛，也就能够接受死亡了吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;很久很久没有写点东西了，最近感觉有点颓废，家里装修的事情也是一拖再拖，到现在终于告一段落了，剩下的事情既不紧急也不重要。这2020年以可能对我来说是一个意义比较重大的年份吧，突然之间连升两级，其实自己有些措手不及的。有时候我在
      
    
    </summary>
    
      <category term="随感" scheme="http://www.wuweiblog.com/categories/%E9%9A%8F%E6%84%9F/"/>
    
    
      <category term="随感" scheme="http://www.wuweiblog.com/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>我的旧吉他</title>
    <link href="http://www.wuweiblog.com/2020/03/23/%E6%88%91%E7%9A%84%E6%97%A7%E5%90%89%E4%BB%96/"/>
    <id>http://www.wuweiblog.com/2020/03/23/我的旧吉他/</id>
    <published>2020-03-23T15:28:53.000Z</published>
    <updated>2020-03-25T02:49:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;时隔很久之后又开始弹琴了，不得不说弹琴这件事情可能是我在大学中所学习到的最有用的技能之一了，在这里不得不提一下我的旧琴了。一把鸽子的合板琴，虽然是合板但是琴的音色很好，高音明亮低音浑厚，美中不足的是低音部分略显低沉，不过对我来说已经是一把足够好的琴了。高考完之后家里给买了一把琴，那把琴才260块钱，一把弦距极高的琴，目测12品弦距可能接近10mm，当时不懂琴反正都是家里买的，还免费赠送了十节课。进了大一的时候一直都是拿着那根烧火棍在弹，现在看起来那把琴可以说是反人类了，不过当时的我们弹得很开心，而且那个时候我们练琴练的十分投入，从两个完全没有基础的小白到初窥吉他门径，我们花了很多时间和精力，每天中午在楼顶上练琴，记得我们当时练的第一首指弹的曲子就是天空之城，当时谱子都看不太懂，华彩的标记看不懂，只能自己一点点满满摸索，连续练了一个月，终于能够比较顺畅的弹下来了。我们那个时候特别开心，手指上的茧起了又磨破了，然后又起了茧，这样一层一层，知道手指头上都是硬硬的死皮。<br>&nbsp;&nbsp;&nbsp;&nbsp;不记得是大一下还是进大二的时候，再人家的店里第一次摸我现在这把琴，当时手感和音色让我感到震撼，这么好的共振效果，这么低的弦距，这么舒适的手感，我想买下这把琴，但是自己当时真的没有钱，这把琴当时标价1200，在我们软磨硬泡之下降到了800，可是800当时对我来说也是一笔巨款，当时我生活费每个月就六七百块，家里一次性给了我一个学期的生活费，我咬牙买下了它，然后半个学期过着贫穷的生活，半个学期不敢怎么出去聚餐，不敢出去玩，然后我跟我的宝贝吉他相依为命快十年了，后来也试了不少好琴，也想着换一把全单的琴。到了工作之后，稍微有一点钱了，其实很想换把琴，但是还是不舍得换，并不是不舍得钱，而是不舍得我的这把旧吉他放在家里吃灰，然后慢慢变成一个烧火棍。在这快十年间经历了很多事情，有时候练琴练的很多，有时候很久不弹。有时候高兴的时候弹，有时候难过的时候弹，这把就吉他见证了我这十年来的喜怒哀乐，或者它对于我来说不仅是一把琴，或许有了更深刻的含义。<br>&nbsp;&nbsp;&nbsp;&nbsp;我一直坚信即使我一无所有，我也不会把它卖掉，当然也并不是什么名贵的琴，也卖不了什么钱，但是它对我的意义很大，它见证了我的成长。我觉得每个人都应该学习一门乐器，每个人都应该学些音乐，有很多时候其实你会发现你真的一无所有，除了你的乐器陪伴着你，他们能感受你的情绪，他们能体会你的愤怒，你的悲伤，还有快乐，他们就安静的躺在那里，在你需要的时候就可以给你陪伴，让你感到温暖，我的旧吉他不是什么名贵的吉他，可是它对我来说却是无可替代的，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;时隔很久之后又开始弹琴了，不得不说弹琴这件事情可能是我在大学中所学习到的最有用的技能之一了，在这里不得不提一下我的旧琴了。一把鸽子的合板琴，虽然是合板但是琴的音色很好，高音明亮低音浑厚，美中不足的是低音部分略显低沉，不过对我来
      
    
    </summary>
    
      <category term="随感" scheme="http://www.wuweiblog.com/categories/%E9%9A%8F%E6%84%9F/"/>
    
    
      <category term="随感" scheme="http://www.wuweiblog.com/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>关于openSFM代码学习</title>
    <link href="http://www.wuweiblog.com/2020/03/22/%E5%85%B3%E4%BA%8EopenSFM%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.wuweiblog.com/2020/03/22/关于openSFM的学习/</id>
    <published>2020-03-22T13:09:55.000Z</published>
    <updated>2020-03-22T02:53:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>一直在找和学习关于SFM的资料和代码，从刚开始的bundler到后来的ceres-sovler然后再到上层的应用openMVG+openMVS再到现在的openSFM，通过对这些的学习，对于SFM的基本知识我自认为已经是掌握得差不多了，最近在对openSFM的学习过程中同时对openSFM又有了一些改造，下面我详细的对自己的学习过程进行一个介绍，同时也对openSFM进行一个入门性质的介绍：<br>首先我先介绍一下关于openSFM的<a href="https://opensfm.readthedocs.io/en/latest/" target="_blank" rel="noopener">编译</a>实际上在官网中介绍得比较详细了，下面我进行一个简单的介绍，openSFM是一个依赖于部分C++库的由python编写的SFM代码，所以它既具有较高的效率，同时也能够方便的进行接口的扩展和使用：</p><h2 id="安装与编译"><a href="#安装与编译" class="headerlink" title="安装与编译"></a>安装与编译</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone --recursive https://github.com/mapillary/OpenSfM</span><br><span class="line">如果在clone的时候没有添加recursive参数，则后续可以通过如下处理</span><br><span class="line"></span><br><span class="line">cd OpenSfM</span><br><span class="line">git submodule update --init --recursive</span><br></pre></td></tr></table></figure><p>openSFM依赖库包括：openCV，openGV，Ceres Solver以及Numpy，SciPy，Networkx, PyYAML, exifread其他的依赖库都没有什么好说的，主要说一下关于openGV的库，我选择的是ubuntu18.04 python3下安装，首先下载openGV的库，然后有一个很重要的步骤就是这是python安装录的设置，主要代码为：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mkdir -p /source &amp;&amp; cd /source &amp;&amp; \</span><br><span class="line">git clone https://github.com/paulinus/opengv.git &amp;&amp; \</span><br><span class="line">cd /source/opengv &amp;&amp; \</span><br><span class="line">git submodule update --init --recursive &amp;&amp; \</span><br><span class="line">mkdir -p build &amp;&amp; cd build &amp;&amp; \</span><br><span class="line">cmake .. -DBUILD_TESTS=<span class="keyword">OFF</span> \</span><br><span class="line">         -DBUILD_PYTHON=<span class="keyword">ON</span> \</span><br><span class="line">         -DPYBIND11_PYTHON_VERSION=<span class="number">3.6</span> \</span><br><span class="line">         -DPYTHON_INSTALL_DIR=/usr/local/lib/python3.<span class="number">6</span>/dist-packages/ \</span><br><span class="line">         &amp;&amp; \</span><br><span class="line">make <span class="keyword">install</span> &amp;&amp; \</span><br><span class="line">cd / &amp;&amp; rm -rf /source/opengv</span><br></pre></td></tr></table></figure></p><p>以上参数：-DPYTHON_INSTALL_DIR主要目的在于设置python库的路径，这个根据自己的python安装库来进行设置，此外可能存在问题的部分在ceres solver的安装，一般给的地址都是google的地址，如果没有梯子无法clone下来，其实在github上也有副本，可以从github上clone下来然后编译，完成依赖库的安装后只需要<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pythonX setup.py build</span><br></pre></td></tr></table></figure></p><p>其中X为自己安装python 的版本号。</p><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><p>完成安装后在bin目录下就会出现opensfm和opensfm_run_all文件<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line">DIR=$( <span class="built_in">cd</span> <span class="string">"<span class="variable">$( dirname "$&#123;BASH_SOURCE[0]&#125;" )</span>"</span> &amp;&amp; <span class="built_in">pwd</span> )</span><br><span class="line">PYTHON=<span class="variable">$&#123;2:-python3&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Running using Python command: <span class="variable">$PYTHON</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$PYTHON</span> <span class="variable">$DIR</span>/opensfm extract_metadata <span class="variable">$1</span></span><br><span class="line"><span class="variable">$PYTHON</span> <span class="variable">$DIR</span>/opensfm detect_features <span class="variable">$1</span></span><br><span class="line"><span class="variable">$PYTHON</span> <span class="variable">$DIR</span>/opensfm match_features <span class="variable">$1</span></span><br><span class="line"><span class="variable">$PYTHON</span> <span class="variable">$DIR</span>/opensfm create_tracks <span class="variable">$1</span></span><br><span class="line"><span class="variable">$PYTHON</span> <span class="variable">$DIR</span>/opensfm reconstruct <span class="variable">$1</span></span><br><span class="line"><span class="variable">$PYTHON</span> <span class="variable">$DIR</span>/opensfm mesh <span class="variable">$1</span></span><br><span class="line"><span class="variable">$PYTHON</span> <span class="variable">$DIR</span>/opensfm undistort <span class="variable">$1</span></span><br><span class="line"><span class="variable">$PYTHON</span> <span class="variable">$DIR</span>/opensfm compute_depthmaps <span class="variable">$1</span></span><br></pre></td></tr></table></figure></p><p>从以上的文件中我们可以看到处理顺序，通过python bin/opensfm comman parameters来运行，首先解析元数据，然后检测特征点，特征点匹配，查找连接点，光束法平差计算，计算mesh，影像核线校正，然后计算深度图，实际上如果不做密集匹配后面三个步骤就不需要了，而而输入的参数实际上就是影像路径，影像文件夹中应该将影像放在images文件夹下，在解析过程中会自动查找images文件夹，找到文件夹下所有影像进行处理。</p><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><p>python的代码相对简单，在这里我只针对核心代码进行分析，首先是</p><ul><li>config.py文件，这个文件设置了所有默认参数，在测试数据集中我们可以看到有一个config.yaml文件，实际上这个文件就是设置参数文件，实际上不是所有参数都需要设置，如果没有设置参数，则参数选取config.py中设置的默认参数进行处理，所以这个文件十分重要；</li><li>dataset.py文件，这个文件是对数据集的定义文件，文件包含了所有文件的读取，保存构建影像列表等信息，因此如果需要对源码进行分析可以从输出文件往前分析；</li></ul><p>其他的文件主要是功能性文件，具体代码实际上比较简单，在这里我就不再进行更加详细的介绍，如果有兴趣的话可以一起讨论关于openSFM的问题：<a href="mailto:wuwei_cug@163.com" target="_blank" rel="noopener">wuwei_cug@163.com</a></p><h2 id="输出文件分析"><a href="#输出文件分析" class="headerlink" title="输出文件分析"></a>输出文件分析</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">reconstruction.json: [RECONSTRUCTION, ...]</span><br><span class="line"></span><br><span class="line">RECONSTRUCTION: &#123;</span><br><span class="line">    "cameras": &#123;</span><br><span class="line">        CAMERA_ID: CAMERA,</span><br><span class="line">        ...</span><br><span class="line">    &#125;,</span><br><span class="line">    "shots": &#123;</span><br><span class="line">        SHOT_ID: SHOT,</span><br><span class="line">        ...</span><br><span class="line">    &#125;,</span><br><span class="line">    "points": &#123;</span><br><span class="line">        POINT_ID: POINT,</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CAMERA: &#123;</span><br><span class="line">    "projection_type": "perspective",  # Can be perspective, brown, fisheye or equirectangular</span><br><span class="line">    "width": NUMBER,                   # Image width in pixels</span><br><span class="line">    "height": NUMBER,                  # Image height in pixels</span><br><span class="line"></span><br><span class="line">    # Depending on the projection type more parameters are stored.</span><br><span class="line">    # These are the parameters of the perspective camera.</span><br><span class="line">    "focal": NUMBER,                   # Estimated focal length</span><br><span class="line">    "k1": NUMBER,                      # Estimated distortion coefficient</span><br><span class="line">    "k2": NUMBER,                      # Estimated distortion coefficient</span><br><span class="line">    "focal_prior": NUMBER,             # Initial focal length</span><br><span class="line">    "k1_prior": NUMBER,                # Initial distortion coefficient</span><br><span class="line">    "k2_prior": NUMBER                 # Initial distortion coefficient</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SHOT: &#123;</span><br><span class="line">    "camera": CAMERA_ID,</span><br><span class="line">    "rotation": [X, Y, Z],      # Estimated rotation as an angle-axis vector</span><br><span class="line">    "translation": [X, Y, Z],   # Estimated translation</span><br><span class="line">    "gps_position": [X, Y, Z],  # GPS coordinates in the reconstruction reference frame</span><br><span class="line">    "gps_dop": METERS,          # GPS accuracy in meters</span><br><span class="line">    "orientation": NUMBER,      # EXIF orientation tag (can be 1, 3, 6 or 8)</span><br><span class="line">    "capture_time": SECONDS     # Capture time as a UNIX timestamp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POINT: &#123;</span><br><span class="line">    "coordinates": [X, Y, Z],      # Estimated position of the point</span><br><span class="line">    "color": [R, G, B],            # Color of the point</span><br><span class="line">    "reprojection_error": NUMBER   # Average reprojection error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上就是<a href="https://opensfm.readthedocs.io/en/latest/dataset.html#reconstruction-file-format" target="_blank" rel="noopener">官网</a>关于renconstruction的解释，如果影像中包含经纬度信息还有reference_ll等中心经纬度信息，实际上shot就是影像，shot_id实际上就是影像名，<strong>POINT实际上就是通过连接点计算得到的三维点信息，而POINT的id实际上就是trackID，据此可以时间track中影像坐标与POINT的三维点坐标进行匹配；</strong> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直在找和学习关于SFM的资料和代码，从刚开始的bundler到后来的ceres-sovler然后再到上层的应用openMVG+openMVS再到现在的openSFM，通过对这些的学习，对于SFM的基本知识我自认为已经是掌握得差不多了，最近在对openSFM的学习过程中同时
      
    
    </summary>
    
      <category term="学习" scheme="http://www.wuweiblog.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="图像处理" scheme="http://www.wuweiblog.com/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>tensorflow-三十一弹</title>
    <link href="http://www.wuweiblog.com/2020/03/22/tensorflow-%E4%B8%89%E5%8D%81%E4%B8%80%E5%BC%B9/"/>
    <id>http://www.wuweiblog.com/2020/03/22/tensorflow-三十一弹/</id>
    <published>2020-03-22T02:55:25.000Z</published>
    <updated>2020-03-22T08:51:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;前一段时间熟悉了一下tensorflow2.0以及kersa，然后通过mnist数据集构建了一个简单的深度网络进行了学习，基于上一弹的基础我们来进行一些更加深入的学习，数据集同样是采用mnist数据集，我们来训练一个GAN网络，首先我们对GAN的原理进行分析：</p><h2 id="GAN原理分析"><a href="#GAN原理分析" class="headerlink" title="GAN原理分析"></a>GAN原理分析</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;GAN, Generative Adversarial Networks又被称为生成对抗网络<a href="#refer-anchor-1"><sup>1</sup></a>，在这个网络模型中至少需要两个部分，分别成为生成器和识别器，其中生成器主要作用在于根据一个随机输入生成需要生成的对象，识别器可以i认为就是一个简单的神经网络，对生成器生成的数据进行识别。在此过程中需要明确的是代价函数，针对生成器和识别器我们都需要指定代价函数，具体的函数形式我们后续再讨论，首先我们先讨论一下生成器与识别器的模式。</p><h3 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;实际上生成器可以简单的理解为一个分布函数，只是这个分布函数的参数是一个深度神经网络，根据一个输入以及目标label得到一个确定的输出，具体代码为：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">acgan_generator</span><span class="params">()</span>:</span></span><br><span class="line">    model = Sequential()</span><br><span class="line"></span><br><span class="line">    model.add(layers.Dense(<span class="number">128</span> * <span class="number">7</span> * <span class="number">7</span>, activation=<span class="string">"relu"</span>, input_dim=<span class="number">100</span>))</span><br><span class="line">    model.add(layers.Reshape((<span class="number">7</span>, <span class="number">7</span>, <span class="number">128</span>)))</span><br><span class="line">    model.add(layers.BatchNormalization(momentum=<span class="number">0.8</span>))</span><br><span class="line">    model.add(layers.UpSampling2D())</span><br><span class="line">    model.add(layers.Conv2D(<span class="number">128</span>, kernel_size=<span class="number">3</span>, padding=<span class="string">"same"</span>))</span><br><span class="line">    model.add(layers.Activation(<span class="string">"relu"</span>))</span><br><span class="line">    model.add(layers.BatchNormalization(momentum=<span class="number">0.8</span>))</span><br><span class="line">    model.add(layers.UpSampling2D())</span><br><span class="line">    model.add(layers.Conv2D(<span class="number">64</span>, kernel_size=<span class="number">3</span>, padding=<span class="string">"same"</span>))</span><br><span class="line">    model.add(layers.Activation(<span class="string">"relu"</span>))</span><br><span class="line">    model.add(layers.BatchNormalization(momentum=<span class="number">0.8</span>))</span><br><span class="line">    model.add(layers.Conv2D(<span class="number">1</span>, kernel_size=<span class="number">3</span>, padding=<span class="string">'same'</span>))</span><br><span class="line">    model.add(layers.Activation(<span class="string">"tanh"</span>))</span><br><span class="line"></span><br><span class="line">    model.summary()</span><br><span class="line"></span><br><span class="line">    noise = layers.Input(shape=(<span class="number">100</span>,))</span><br><span class="line">    label = layers.Input(shape=(<span class="number">1</span>,), dtype=<span class="string">'int32'</span>)</span><br><span class="line">    label_embedding = layers.Flatten()(layers.Embedding(<span class="number">10</span>, <span class="number">100</span>)(label))</span><br><span class="line"></span><br><span class="line">    model_input = layers.multiply([noise, label_embedding])</span><br><span class="line">    img = model(model_input)</span><br><span class="line">    <span class="comment">#将模型输出</span></span><br><span class="line">    keras.utils.plot_model(model, to_file=<span class="string">'./data/2_Generator.png'</span>, show_shapes=<span class="keyword">True</span>)</span><br><span class="line">    <span class="keyword">return</span> tf.keras.Model([noise, label], img)</span><br></pre></td></tr></table></figure></p><p>这个生成器的结构为：<br><img src="https://blogimage-1251632003.cos.ap-guangzhou.myqcloud.com/2_Generator.png" alt="生成器"><br>为了简单起见我们结合代码与程序结构同时进行分析，首先我们的生成器是一个随机的输入向量，这个向量是一个100维的随机向量，同时输入一个label值，通过label值来标识需要模拟哪个数值（mnist只有10个值），这个100维向量通过神经网络转换维128<em>7</em>7的向量，步骤包括：</p><ul><li>向量转换为二维-&gt;归一化-&gt;向上采样维128<em>（14</em>14）的向量-&gt;卷积操作-&gt;激活函数-&gt;归一化-&gt;向上采样维64<em>（28</em>28）的向量-&gt;卷积操作-&gt;激活函数-&gt;归一化为1&amp;（27*28）的向量-&gt;卷积操作-&gt;激活函数</li></ul><p>最后得到一个生成的28<em>28的手写数字以及输入的待识别的标识，函数最后将构建的模型输出，实际上生成器就完成了，简单的说就是根据一个随机的输入值构建了一个生成28</em>28大小的影像。</p><h3 id="识别器"><a href="#识别器" class="headerlink" title="识别器"></a>识别器</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;实际上识别器的主要作用在于识别图像是否由生成器生成，在我们这个目标中识别器的作用是识别通过生成器生成的手写数字是否为对应的数字，识别器的具体代码为：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">acgan_discriminator</span><span class="params">()</span>:</span></span><br><span class="line">    model = Sequential()</span><br><span class="line">    model.add(layers.Conv2D(<span class="number">16</span>, kernel_size=<span class="number">3</span>, strides=<span class="number">2</span>, input_shape=(<span class="number">28</span>,<span class="number">28</span>,<span class="number">1</span>), padding=<span class="string">"same"</span>))</span><br><span class="line">    model.add(layers.LeakyReLU(alpha=<span class="number">0.2</span>))</span><br><span class="line">    model.add(layers.Dropout(<span class="number">0.25</span>))</span><br><span class="line">    model.add(layers.Conv2D(<span class="number">32</span>, kernel_size=<span class="number">3</span>, strides=<span class="number">2</span>, padding=<span class="string">"same"</span>))</span><br><span class="line">    model.add(layers.ZeroPadding2D(padding=((<span class="number">0</span>,<span class="number">1</span>),(<span class="number">0</span>,<span class="number">1</span>))))</span><br><span class="line">    model.add(layers.LeakyReLU(alpha=<span class="number">0.2</span>))</span><br><span class="line">    model.add(layers.Dropout(<span class="number">0.25</span>))</span><br><span class="line">    model.add(layers.BatchNormalization(momentum=<span class="number">0.8</span>))</span><br><span class="line">    model.add(layers.Conv2D(<span class="number">64</span>, kernel_size=<span class="number">3</span>, strides=<span class="number">2</span>, padding=<span class="string">"same"</span>))</span><br><span class="line">    model.add(layers.LeakyReLU(alpha=<span class="number">0.2</span>))</span><br><span class="line">    model.add(layers.Dropout(<span class="number">0.25</span>))</span><br><span class="line">    model.add(layers.BatchNormalization(momentum=<span class="number">0.8</span>))</span><br><span class="line">    model.add(layers.Conv2D(<span class="number">128</span>, kernel_size=<span class="number">3</span>, strides=<span class="number">1</span>, padding=<span class="string">"same"</span>))</span><br><span class="line">    model.add(layers.LeakyReLU(alpha=<span class="number">0.2</span>))</span><br><span class="line">    model.add(layers.Dropout(<span class="number">0.25</span>))</span><br><span class="line"></span><br><span class="line">    model.add(layers.Flatten())</span><br><span class="line">    model.summary()</span><br><span class="line"></span><br><span class="line">    img = layers.Input(shape=(<span class="number">28</span>,<span class="number">28</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Extract feature representation</span></span><br><span class="line">    features = model(img)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Determine validity and label of the image</span></span><br><span class="line">    validity = layers.Dense(<span class="number">1</span>, activation=<span class="string">"sigmoid"</span>)(features)</span><br><span class="line">    label = layers.Dense(<span class="number">10</span>, activation=<span class="string">"softmax"</span>)(features)</span><br><span class="line">    </span><br><span class="line">    keras.utils.plot_model(model, to_file=<span class="string">'./data/2_Discriminator.png'</span>, show_shapes=<span class="keyword">True</span>)</span><br><span class="line">    <span class="keyword">return</span> tf.keras.Model(img, [validity, label])</span><br></pre></td></tr></table></figure></p><p><img src="https://blogimage-1251632003.cos.ap-guangzhou.myqcloud.com/2_Discriminator.png" alt="识别器"><br>识别器可以简单的理解为是一个识别输入的图像是否为对应数组的一个深度网络，其输入是影像，输出是数字的10维向量，对于识别器的识别过程，在以前就多此提到过，在这里没有必要再多提了，通过识别器可以对生成器生成的结果进行识别给出判断结果对生成器进行优化，同时识别器不仅要识别数字结果还需要识别validity，这个标识的主要作用在于标识输入的参数是由生成器提供还是真实数据。</p><h3 id="训练过程"><a href="#训练过程" class="headerlink" title="训练过程"></a>训练过程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(epochs, batch_size=<span class="number">128</span>, sample_interval=<span class="number">10</span>)</span>:</span></span><br><span class="line">    <span class="comment"># Build and compile the discriminator</span></span><br><span class="line">    optimizer = Adam(<span class="number">0.0002</span>, <span class="number">0.5</span>)</span><br><span class="line">    losses = [<span class="string">'binary_crossentropy'</span>, <span class="string">'sparse_categorical_crossentropy'</span>]</span><br><span class="line">    discriminator = acgan_discriminator()</span><br><span class="line">    discriminator.compile(loss=losses,</span><br><span class="line">        optimizer=optimizer,</span><br><span class="line">        metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Build the generator</span></span><br><span class="line">    </span><br><span class="line">    generator = acgan_generator()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># The generator takes noise and the target label as input</span></span><br><span class="line">    <span class="comment"># and generates the corresponding digit of that label</span></span><br><span class="line">    noise = layers.Input(shape=(<span class="number">100</span>,))</span><br><span class="line">    label = layers.Input(shape=(<span class="number">1</span>,))</span><br><span class="line">    img = generator([noise, label])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># For the combined model we will only train the generator</span></span><br><span class="line">    discriminator.trainable = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># The discriminator takes generated image as input and determines validity</span></span><br><span class="line">    <span class="comment"># and the label of that image</span></span><br><span class="line">    valid, target_label = discriminator(img)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># The combined model  (stacked generator and discriminator)</span></span><br><span class="line">    <span class="comment"># Trains the generator to fool the discriminator</span></span><br><span class="line">    combined = tf.keras.Model([noise, label], [valid, target_label])</span><br><span class="line">    combined.compile(loss=losses,optimizer=optimizer)</span><br><span class="line">    keras.utils.plot_model(combined, to_file=<span class="string">'./data/2_Combined.png'</span>, show_shapes=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Load the dataset</span></span><br><span class="line">    (X_train, y_train), (_, _) = load_mnist_data()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Configure inputs</span></span><br><span class="line">    X_train = (X_train.astype(np.float32) - <span class="number">127.5</span>) / <span class="number">127.5</span></span><br><span class="line">    X_train = np.expand_dims(X_train, axis=<span class="number">3</span>)</span><br><span class="line">    y_train = y_train.reshape(<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Adversarial ground truths</span></span><br><span class="line">    valid = np.ones((batch_size, <span class="number">1</span>))</span><br><span class="line">    fake = np.zeros((batch_size, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> range(epochs):</span><br><span class="line">        <span class="comment"># ---------------------</span></span><br><span class="line">        <span class="comment">#  Train Discriminator</span></span><br><span class="line">        <span class="comment"># ---------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Select a random batch of images</span></span><br><span class="line">        idx = np.random.randint(<span class="number">0</span>, X_train.shape[<span class="number">0</span>], batch_size)</span><br><span class="line">        imgs = X_train[idx]</span><br><span class="line">        <span class="comment"># Image labels. 0-9 </span></span><br><span class="line">        img_labels = y_train[idx]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Sample noise as generator input</span></span><br><span class="line">        noise = np.random.normal(<span class="number">0</span>, <span class="number">1</span>, (batch_size, <span class="number">100</span>))</span><br><span class="line">        <span class="comment"># The labels of the digits that the generator tries to create an</span></span><br><span class="line">        <span class="comment"># image representation of</span></span><br><span class="line">        sampled_labels = np.random.randint(<span class="number">0</span>, <span class="number">10</span>, (batch_size, <span class="number">1</span>))</span><br><span class="line">        <span class="comment"># Generate a half batch of new images</span></span><br><span class="line">        gen_imgs = generator.predict([noise, sampled_labels])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Train the discriminator</span></span><br><span class="line">        d_loss_real = discriminator.train_on_batch(imgs, [valid, img_labels])</span><br><span class="line">        d_loss_fake = discriminator.train_on_batch(gen_imgs, [fake, sampled_labels])</span><br><span class="line">        d_loss = <span class="number">0.5</span> * np.add(d_loss_real, d_loss_fake)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># ---------------------</span></span><br><span class="line">        <span class="comment">#  Train Generator</span></span><br><span class="line">        <span class="comment"># ---------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Train the generator</span></span><br><span class="line">        g_loss = combined.train_on_batch([noise, sampled_labels], [valid, sampled_labels])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Plot the progress</span></span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"%d [D loss: %f, acc.: %.2f%%, op_acc: %.2f%%] [G loss: %f]"</span> % (epoch, d_loss[<span class="number">0</span>], <span class="number">100</span>*d_loss[<span class="number">3</span>], <span class="number">100</span>*d_loss[<span class="number">4</span>], g_loss[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># If at save interval =&gt; save generated image samples</span></span><br><span class="line">        <span class="keyword">if</span> epoch % sample_interval == <span class="number">0</span>:</span><br><span class="line">            <span class="comment">#save_model(generator,discriminator)</span></span><br><span class="line">            sample_images(epoch,generator)</span><br><span class="line">    save_model(generator,discriminator)</span><br></pre></td></tr></table></figure><p>代码也不是很难，主要过程在于训练的过程，在训练的过程中我们通过真实数据与fake数据的交替训练对生成器和识别器进行训练，识别器需要识别的结<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_loss_real = discriminator.train_on_batch(imgs, [valid, img_labels])</span><br><span class="line">d_loss_fake = discriminator.train_on_batch(gen_imgs, [fake, sampled_labels])</span><br><span class="line">d_loss = <span class="number">0.5</span> * np.add(d_loss_real, d_loss_fake)</span><br></pre></td></tr></table></figure></p><p>以上代码就是识别器识别的过程，实际上我们识别器需要保证识别的label和vaild同时准确才行，所以识别的损失函数为识别真实数据的损失函数与生成器生成数据的损失函数；在完成识别器训练后就需要对生成器进行训练，对生成器的训练过程实际上损失函数就是输入的noise以及需要识别的数字，然后通过识别器能够识别出是是否是生成器生成的数据以及是否为给定的数值，据此对生成器进行训练，通过交替训练识别器与生成器达到最后生成器能够进行最好的识别的效果。</p><h3 id="结果与讨论"><a href="#结果与讨论" class="headerlink" title="结果与讨论"></a>结果与讨论</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;通过以上过程可以得到一个稳定的生成器与识别器，实际上GAN最大的作用还是在于训练生成器，使得生成器生成的数据能够最佳拟合真实数据，达到模拟仿真的目的。同时GAN也被广泛的应用于图像修复，图像生成，音乐生成，围棋<a href="&quot;refer-anchor-2&quot;"><sup>2</sup></a><a href="&quot;refer-anchor-3&quot;"><sup>3</sup></a><a href="&quot;refer-anchor-4&quot;"><sup>4</sup></a>等领域，实际上GAN的出现使得计算器自学习能力向前迈进了一大步，下面展示通过GAN训练的手写数字模拟的效果：<br><img src="https://blogimage-1251632003.cos.ap-guangzhou.myqcloud.com/2_GANResult.png" alt="GAN模拟手写数据结果"><br>上图为模拟的结果，模拟的数字为1，文件名为迭代的次数，每次迭代的batch大小为100，可以看出迭代次数小的时候模拟结果比较差，当迭代次数增加，生成器效果慢慢编号，最后随着迭代次数的增加，生成器生成的数据已经能够很好的模拟手写数字的真实数据了。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><div id="refer-anchor-1"></div></p><ul><li>[1] Goodfellow, I. J., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D.,<br>Ozair, S., Courville, A., and Bengio, Y. (2014b). Generative adversarial networks. In NIPS’2014 .<div id="refer-anchor-2"></div></li><li>[2] Yijun Li, Sifei Liu, Jimei Yang,et.al. Generative Face Completion[C]// IEEE Conference on Computer Vision &amp; Pattern Recognition. IEEE, 2017.<div id="refer-anchor-3"></div></li><li>[3] Jean-Marc Valin, Jan Skoglund. LPCNET: Improving Neural Speech Synthesis through Linear Prediction[C]// Icassp IEEE International Conference on Acoustics. IEEE, 2019.<div id="refer-anchor-4"></div></li><li>[4] Jim X. Chen. The Evolution of Computing: AlphaGo[J]. Computing in Science &amp; Engineering, 2016, 18(4):4-7.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前一段时间熟悉了一下tensorflow2.0以及kersa，然后通过mnist数据集构建了一个简单的深度网络进行了学习，基于上一弹的基础我们来进行一些更加深入的学习，数据集同样是采用mnist数据集，我们来训练一个GAN网络
      
    
    </summary>
    
      <category term="学习" scheme="http://www.wuweiblog.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="tensorflow学习" scheme="http://www.wuweiblog.com/tags/tensorflow%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>tensorflow-三十弹</title>
    <link href="http://www.wuweiblog.com/2020/03/03/tensorflow-%E4%B8%89%E5%8D%81%E5%BC%B9/"/>
    <id>http://www.wuweiblog.com/2020/03/03/tensorflow-三十弹/</id>
    <published>2020-03-03T01:06:38.000Z</published>
    <updated>2020-03-03T07:06:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;在上一部分中我们只描述了深度学习的一些基本问题，如梯度消失，激活函数等问题，剩下两个部分，分别为tensorflow2.x的使用以及关于GAN的一些知识与实践，首先介绍一下关于tensorflow2.x 以及其集成的kersa的知识，以前的时候写神经网络总是通过tensorflow原生直接写，虽然也提供了自动求导方式，但是实践起来总是有点麻烦，而使用kersa之后感觉惊为天人，网络的构建过程得到了极大的简化，使得构建深度学习模型变成了一个工程问题而非科学问题了。<br>&nbsp;&nbsp;&nbsp;&nbsp;下面我们首先介绍一下<strong>tensorflow2.0</strong>，首先安装过程，目前来说tensorflow2.0的安装不支持python3.7，我在python3.6 ubuntu18.04 LST版本下安装，我本机系统式win10，采用WSL的方式安装了linux的控制台环境，反正目前也不需要图形化环境，所以采用此种方式最为简单方便，安装在linux下安装tensorflow2.0的环境相对还是比较简单，在连接网络的条件下<a href="https://zhuanlan.zhihu.com/p/61472293" target="_blank" rel="noopener">参考</a>进行就可以了。安装完成之后我们就可以开始进行tensorflow代码的编写了，原生的tensorflow代码实际上区别不大，我们主要介绍一下关于kersa代码的一些特点：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">model = tf.keras.Sequential()</span><br><span class="line">model.add(layers.Conv2D(<span class="number">8</span>,(<span class="number">5</span>,<span class="number">5</span>), activation=<span class="string">'relu'</span>,input_shape=(<span class="number">28</span>,<span class="number">28</span>,<span class="number">1</span>)))</span><br><span class="line">model.add(layers.Conv2D(<span class="number">16</span>,(<span class="number">5</span>,<span class="number">5</span>),activation=<span class="string">'relu'</span>,input_shape=(<span class="number">28</span>,<span class="number">28</span>,<span class="number">1</span>)))</span><br><span class="line">model.add(layers.MaxPool2D(pool_size=(<span class="number">2</span>,<span class="number">2</span>)))</span><br><span class="line">model.add(layers.Flatten())</span><br><span class="line">model.add(layers.Dense(<span class="number">128</span>, activation=<span class="string">'relu'</span>))<span class="comment">#784向量映射到128</span></span><br><span class="line">model.add(layers.Dropout(<span class="number">0.2</span>))  <span class="comment">#dropout trick 避免模型过于依赖某些神经元避免在分类过程中</span></span><br><span class="line">model.add(layers.Dense(<span class="number">10</span>, activation=<span class="string">'softmax'</span>))</span><br><span class="line">model.compile(optimizer=<span class="string">'adam'</span>,</span><br><span class="line">                loss=<span class="string">'sparse_categorical_crossentropy'</span>,</span><br><span class="line">                metrics=[<span class="string">'accuracy'</span>])</span><br></pre></td></tr></table></figure></p><p>以上代码构建了一个简单的深度神经网络的学习模型，从以上代码中有几个函数，我们进行详细说明：</p><ul><li>Sequential 构建一个序贯模型：序贯模型是相对于循环网络来说的，输入经过处理到输出，而不需要循环输入的网络模型就成为序贯模型；</li><li>Conv2D：卷积层，这个是CNN网络的典型结构，对网络做一个卷积操作，卷积层包括卷积核大小以及卷积特征数；</li><li>MaxPool2D：池化层，实际上池化操作在以前的部分也有，就是一个求池化核大小内的最大值的区别；</li><li>Flatten：压平，将一个n维向量转换为一维的过程；</li><li>Dense：全连接层</li><li>compile：实际上这个就是定义网络的目标函数，损失函数以及优化方法的定义，通过compile构成一个能够反向传播的网络，在compile之后就可以进行数据优化的训练过程了；</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;从上面一小段代码可以看出，通过kersa将神经网简单的分成了几个部分，包括：数据准备（数据读取和数据格式转换），模型构建（根据数学原理和神经网络结构构建模型），模型训练。为了能够更加清楚的说明这个过程，编写了一个简单的网络模型作为参考：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">@Descripttion: tensorflow 2.0 kersa学习第一课</span></span><br><span class="line"><span class="string">@version: 1.0版本</span></span><br><span class="line"><span class="string">@Author: Frank.Wu</span></span><br><span class="line"><span class="string">@Date: 2020-02-26 09:50:02</span></span><br><span class="line"><span class="string">@LastEditors: Frank.Wu</span></span><br><span class="line"><span class="string">@LastEditTime: 2020-03-03 11:33:48</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#coding = utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> tensorflow <span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> layers, optimizers, Sequential,datasets</span><br><span class="line"><span class="keyword">import</span>  os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(tf.__version__)</span><br><span class="line">print(tf.keras.__version__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(os.environ.keys())</span></span><br><span class="line"><span class="comment"># 设置后台打印日志等级 避免后台打印一些无用的信息</span></span><br><span class="line">os.environ[<span class="string">'TF_CPP_MIN_LOG_LEVEL'</span>] = <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="string">''' </span></span><br><span class="line"><span class="string">    加载mnist数据，判断本地是否有数据，</span></span><br><span class="line"><span class="string">    如果有则加载，否则加载在线数据</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_mnist_data</span><span class="params">()</span>:</span></span><br><span class="line">    pathLocal = <span class="string">'./data/mnist/mnist.npz'</span></span><br><span class="line">    <span class="keyword">if</span>(os.path.exists(pathLocal)):</span><br><span class="line">        f = np.load(pathLocal)</span><br><span class="line">        x_train, y_train = f[<span class="string">'x_train'</span>], f[<span class="string">'y_train'</span>]</span><br><span class="line">        x_test, y_test = f[<span class="string">'x_test'</span>], f[<span class="string">'y_test'</span>]</span><br><span class="line">        f.close()</span><br><span class="line">        <span class="keyword">return</span> (x_train, y_train), (x_test, y_test)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> datasets.mnist.load_data()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    构建模型:</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#1.mnist 全连接模型</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mnist_full_model</span><span class="params">()</span>:</span></span><br><span class="line">    model = tf.keras.Sequential()</span><br><span class="line">    model.add(layers.Flatten(input_shape=(<span class="number">28</span>, <span class="number">28</span>)))<span class="comment">#将28*28 转换到一维</span></span><br><span class="line">    model.add(layers.Dense(<span class="number">128</span>, activation=<span class="string">'relu'</span>))<span class="comment">#784向量映射到128</span></span><br><span class="line">    model.add(layers.Dropout(<span class="number">0.2</span>))  <span class="comment">#dropout trick 避免模型过于依赖某些神经元避免在分类过程中</span></span><br><span class="line">    model.add(layers.Dense(<span class="number">10</span>, activation=<span class="string">'softmax'</span>))</span><br><span class="line">    model.compile(optimizer=<span class="string">'adam'</span>,</span><br><span class="line">                  loss=<span class="string">'sparse_categorical_crossentropy'</span>,</span><br><span class="line">                  metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line">    <span class="comment">#将模型输出</span></span><br><span class="line">    keras.utils.plot_model(model, to_file=<span class="string">'./data/1_model.png'</span>, show_shapes=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment">#plot(model, to_file='./data/1_model.png', show_shapes=True)</span></span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mnist_cnn_model</span><span class="params">()</span>:</span></span><br><span class="line">    model = tf.keras.Sequential()</span><br><span class="line">    model.add(layers.Conv2D(<span class="number">8</span>,(<span class="number">5</span>,<span class="number">5</span>), activation=<span class="string">'relu'</span>,input_shape=(<span class="number">28</span>,<span class="number">28</span>,<span class="number">1</span>)))</span><br><span class="line">    model.add(layers.Conv2D(<span class="number">16</span>,(<span class="number">5</span>,<span class="number">5</span>),activation=<span class="string">'relu'</span>,input_shape=(<span class="number">28</span>,<span class="number">28</span>,<span class="number">1</span>)))</span><br><span class="line">    model.add(layers.MaxPool2D(pool_size=(<span class="number">2</span>,<span class="number">2</span>)))</span><br><span class="line">    model.add(layers.Flatten())</span><br><span class="line">    model.add(layers.Dense(<span class="number">128</span>, activation=<span class="string">'relu'</span>))<span class="comment">#784向量映射到128</span></span><br><span class="line">    model.add(layers.Dropout(<span class="number">0.2</span>))  <span class="comment">#dropout trick 避免模型过于依赖某些神经元避免在分类过程中</span></span><br><span class="line">    model.add(layers.Dense(<span class="number">10</span>, activation=<span class="string">'softmax'</span>))</span><br><span class="line">    model.compile(optimizer=<span class="string">'adam'</span>,</span><br><span class="line">                  loss=<span class="string">'sparse_categorical_crossentropy'</span>,</span><br><span class="line">                  metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line">    <span class="comment">#将模型输出</span></span><br><span class="line">    keras.utils.plot_model(model, to_file=<span class="string">'./data/1_model.png'</span>, show_shapes=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment">#plot(model, to_file='./data/1_model.png', show_shapes=True)</span></span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"> </span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    通过数据进行训练</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#1.mnist 数据集进行训练</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mnist_fit_evaluate</span><span class="params">(model,x_train,y_train,x_test,y_test)</span>:</span></span><br><span class="line">    model.fit(x_train, y_train,batch_size=<span class="number">64</span>, epochs=<span class="number">5</span>)</span><br><span class="line">    model.evaluate(x_test,  y_test, verbose=<span class="number">2</span>)</span><br><span class="line">    model.save(<span class="string">'./data/1_mnist.h5'</span>)</span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    全流程</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mnist_full</span><span class="params">()</span>:</span></span><br><span class="line">    pathModel = <span class="string">'./data/1_mnist.h5'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(os.path.exists(pathModel)):</span><br><span class="line">        model = keras.models.load_model(pathModel)</span><br><span class="line">        <span class="keyword">return</span> model</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        model = mnist_cnn_model()</span><br><span class="line">        (x_train, y_train), (x_test, y_test) = load_mnist_data()</span><br><span class="line">        x_train, x_test=x_train/<span class="number">255.0</span>, x_test/<span class="number">255.0</span></span><br><span class="line">        x_train = x_train.reshape(<span class="number">60000</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">        x_test = x_test.reshape(<span class="number">10000</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">        mnist_fit_evaluate(model,x_train,y_train,x_test,y_test)</span><br><span class="line">        <span class="keyword">return</span> model</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">mnist_full()</span><br></pre></td></tr></table></figure></p><p>以上代码数据采用的是mnist数据，因为提供的mnist数据加载比较慢，所以我们从网上下载了数据并对数据读取代码进行了略微的修改。数据读取完成后得到训练样本集和测试样本集，训练样本集模型层编写了两种模型，包括简单的神经网络模型以及深度神经网络模型，对两种模型进行了训练，并查看训练结果的准确性。另外keras还提供了将模型结构输出的函数，可以将模型结构保存为图片。如果大家有兴趣可以在tensorflow2.0环境下运行以上代码进行测试，以便进一步了解keras的数据模型。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在上一部分中我们只描述了深度学习的一些基本问题，如梯度消失，激活函数等问题，剩下两个部分，分别为tensorflow2.x的使用以及关于GAN的一些知识与实践，首先介绍一下关于tensorflow2.x 以及其集成的kersa
      
    
    </summary>
    
      <category term="学习" scheme="http://www.wuweiblog.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="tensorflow学习" scheme="http://www.wuweiblog.com/tags/tensorflow%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>tensorflow-第二十九弹</title>
    <link href="http://www.wuweiblog.com/2020/02/28/tensorflow-%E4%BA%8C%E5%8D%81%E4%B9%9D%E5%BC%B9/"/>
    <id>http://www.wuweiblog.com/2020/02/28/tensorflow-二十九弹/</id>
    <published>2020-02-28T06:14:07.000Z</published>
    <updated>2020-03-01T08:09:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;很久没有更新这个系列了，不知不觉tensorflow也更新到了2.x版，新版得tenforflow相比于1.x的版本，有着更快的训练速度，同时内部集成了keras使得网络的构建和训练变成了一件及其简单的事情，因此在构建网络上并没有什么可以细说的，剩下的工作我们会把代码的编写放在后一步，着重的说明各种网络的构建模式以及机器学习中的一些细节问题，以及导致这些问题的原因，由此更深入的了解如何通过机器学习对网络进行调优。<br>&nbsp;&nbsp;&nbsp;&nbsp;我打算花一下午的时间总结一下主要包括几个部分的问题：</p><ul><li>第一个就是激活函数的问题：激活函数的类型，为什么需要激活函数，以及如何判断激活函数的好坏；</li><li>第二个是keras的问题，这个工具以前没有用过，所以打算用一下，顺便介绍一下其特点；</li><li>第三个是关于GAN的问题，在GAN中有一个重要的问题是生成器与识别器如何联合调优的问题，这个需要仔细分析；</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;首先我们来谈一下什么是激活函数：<a href="https://baike.baidu.com/item/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/2520792?fr=aladdin" target="_blank" rel="noopener">在神经元中，输入的 inputs 通过加权，求和后，还被作用了一个函数，这个函数就是激活函数。引入激活函数是为了增加神经网络模型的非线性。没有激活函数的每层都相当于矩阵相乘。就算你叠加了若干层之后，无非还是个矩阵相乘罢了。</a>以上这句话引用自百度百科，实际上意思就是说对于神经网络来说，一个神经元的输入实际上就是前面一层神经元值得线性组合，如果不做任何处理，则神经网络就是多个线性函数组合，也就是说就算添加了隐藏层，最后得输出也只是最原始得输入得线性组合（证明），因此中间的隐藏层存在的意义就很有有限，而引入激活函数后，通过激活函数做一个非线性映射，使得神经网络能够对任何函数进行逼近。在了解激活函数后我们需要进一步的了解梯度消失问题：<img src="https://blogimage-1251632003.cos.ap-guangzhou.myqcloud.com/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A2%AF%E5%BA%A6%E6%B6%88%E5%A4%B1.png" alt="梯度比较1"><br>上图中的黄色矩形柱的高度代表了梯度的变化的大小，从中我们可以看到layer2中的梯度变化明显大于layer1，下面需要通过数学的方法进行证明:<br>&nbsp;&nbsp;&nbsp;&nbsp;假设$\delta^l_j= \partial C /\partial b^l_j$表示第l层第j个神经元的梯度，假设$\delta^1$为第一层的梯度向量，$\delta^2$为第二层的梯度向量，通过向量长度能够近似的表示某一层的学习速率，则不同层的学习速率曲线如下图：<br><img src="https://blogimage-1251632003.cos.ap-guangzhou.myqcloud.com/%E4%B8%8D%E5%90%8C%E5%B1%82%E5%AD%A6%E4%B9%A0%E9%80%9F%E7%8E%87.png" alt="梯度比较2"><br>从上图可以看到，越靠近输出层的隐藏层具有越高的学习速率，这个就是我们所说的梯度消失的问题，神经网络层数越多，梯度下降越明显，神经网络层数过多可能导致开始的神经网络梯度变化很小，收敛困难，同时梯度消失的问题又导致对于激活函数响应的问题，这就是我们提到的<a href="http://neuralnetworksanddeeplearning.com/chap5.html" target="_blank" rel="noopener">梯度消失问题</a>。<br>&nbsp;&nbsp;&nbsp;&nbsp;上面的说明都是从实验证明上体现了梯度消失的问题，下面我们对梯度消失的原因进行详细说明:<br><img src="https://blogimage-1251632003.cos.ap-guangzhou.myqcloud.com/%E6%A2%AF%E5%BA%A6%E6%B6%88%E5%A4%B1%E8%AF%B4%E6%98%8E.png" alt="梯度消失3"><br>上图中我们构造了一个最简单的神经网络，每一层只有一个神经元，一般来说权重$w$都小于1，实际上对于激活函数（假设激活函数为sigmoid函数），则sigmoid函数的梯度最大值为0.25，则$|w_j \sigma’(z_j)| &lt; 1/4$由此可得，梯度存在指树下降趋势，由此导致梯度消失。<br>&nbsp;&nbsp;&nbsp;&nbsp;在了解了梯度消失后我们就可以介绍一下<a href="https://blog.csdn.net/tyhj_sf/article/details/79932893" target="_blank" rel="noopener">各种激活函数了</a>实际上主要介绍三类，分别为sigmoid函数，tanh函数以及ReLU函数。对于不同的激活函数我们主要看几点：</p><ul><li>1.激活函数是否对整个实数空间适用（映射整个实数空间）；</li><li>2.激活函数的导数情况；</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;其中第一点是对激活函数的要求，第二点是判断激活函数好坏的特征，这三类激活函数的函数特征在<a href="https://blog.csdn.net/tyhj_sf/article/details/79932893" target="_blank" rel="noopener">网上很多资料</a>上都有,我们就这几种函数来说明他们之间的优劣和各自的特点。首先是sigmoid函数，sigmoid函数在深度学习早期是使用很广泛的函数，在我们刚刚学习深度学习的时候一般是以此函数作为模板的，这个函数满足我们第一点的情况，对于$[-\infty,+\infty]$区间都能够映射到$[-1,1]$之间，且求导简单。但是如我们以上分析的sigmoid函数存在几个问题，第一个：梯度消失的问题，在值极小的情况下sigmoid函数梯度趋近于0，由此导致在多层神经网络中收敛缓慢。特别是在深度神经网络中，梯度消失现象更加明显。第二：sigmoid输出的数学期望不为0，由此导致每一层神经元在传递过程中得到上一层的非0均值的信号叠加的输入。针对第二个问题，有学者引入了tanh函数，tanh函数与sigmoid函数十分相似，只是均值为0。针对第一个问题，有学者引入了ReLU函数，ReLU函数简单，计算极快，但是ReLU的问题在于非0均值以及对于小于0的输入，梯度都为0，神经元不激活。针对ReLU的问题，有很多学者对ReLU函数进行了改进，得到了一系列ReLU函数的变体，在这篇文章中就不进行详细的讨论，在后续文章中会陆续更新关于tensorflow2.0以及一些其他典型网络的相关实现。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;很久没有更新这个系列了，不知不觉tensorflow也更新到了2.x版，新版得tenforflow相比于1.x的版本，有着更快的训练速度，同时内部集成了keras使得网络的构建和训练变成了一件及其简单的事情，因此在构建网络上并
      
    
    </summary>
    
      <category term="学习" scheme="http://www.wuweiblog.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="tensorflow学习" scheme="http://www.wuweiblog.com/tags/tensorflow%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>活得怎么样</title>
    <link href="http://www.wuweiblog.com/2020/02/18/%E6%B4%BB%E5%BE%97%E6%80%8E%E4%B9%88%E6%A0%B7/"/>
    <id>http://www.wuweiblog.com/2020/02/18/活得怎么样/</id>
    <published>2020-02-18T07:50:55.000Z</published>
    <updated>2020-02-18T08:34:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;本来昨天应该写的，但是昨天晚上跟老婆吵架所有的事情都没有心思去做，昨晚也差不多一宿没有睡好，到现在人还是有点不清醒，到现在才能整理思路说一下昨天看的这部电影《遗愿清单》，这部在豆瓣上评分很高的电影也确实值得我们去看，去体会，去思考。<br>&nbsp;&nbsp;&nbsp;&nbsp;剧情很简单，两个身患绝症的老人，在生命的最后关头决定疯狂一把，在生命的最后一个月中去做那些自己想做却又没有能够做得了得事情。看起来感觉就像是《假如再给我三天光明》得升级版，实际上电影得表现力可能要强的多。我们从出生开始实际上就面临着一个问题，那就是我们如何面临死亡以及如何度过我们这一生的问题。我们一直以来有很多角色，学生、子女、丈夫/妻子、员工、老板….每一个角色都有一套评价标准，我们需要当一个好学生，做一个孝顺的子女，做一个好丈夫/妻子，在公司做一个好职员为公司创造价值，做一个好老板好好经营自己的企业。我们在这么多的角色中辗转，然后忘记了一个最重要的角色，那就是我们自己。实际上我们首先是我们自己，然后才是我们需要扮演的角色，而很多人在扮演这些角色的过程中把自己给丢掉了。<br>&nbsp;&nbsp;&nbsp;&nbsp;如果我们的生命只剩下最后三个月我们会去做些什么？也许这个问题只有当我们垂垂老矣的时候才能回答得上来吧，在这个世界上我们很难一辈子只为自己活，只有当我们扮演好了我们生活中的每一个角色之后我们才能够真正的做自己吧，有时候觉得人这一生真的很讽刺，如果把这个世界比作一个大舞台，实际上每个人都只是一个演员，一个永不休止的演员，也许只有在夜深人静的时候我们坐在床上才能真正思考到底我自己是谁这个问题吧！不知道是什么原因，在这两年以来我一直都并不害怕死亡，有时候甚至希望死亡能够快点到来，但是我又不想经历死亡的痛苦，我多么想一觉睡过去，然后第二天不再醒来。<br>&nbsp;&nbsp;&nbsp;&nbsp;有人说过众生皆苦，也有人问生活一直如此艰辛还是只有偶尔如此，有人失去一切仍然坚持活着，有人充满希望的躺在了铁轨上。有一个很重要的问题是我们的生活到底有什么意义，或者说是因为我们的角色给我们带来了生活的意义，或者说活着本来就是意义。所以实际上这就是宗教让我们觉得矛盾的地方，如果死后能进天堂，如果死后能够进去极乐世界那为什么还要我们忍受活着的痛苦呢？为什么所有宗教都不提倡自杀呢？是怕天堂的人太多了么？或者说实际上我们身上本来就有很强的动物性，所以我们只是本能的有着对死亡的恐惧，以及将基因传承下去的本能，或者说生存的意义就是对死亡的恐惧？实际上死亡如何也没有人知道，所以我们的恐惧只是对未知的恐惧？所以随着年龄的增加我们越来越恐惧未知，所以我们也越来越恐惧死亡？<br>&nbsp;&nbsp;&nbsp;&nbsp;絮絮叨叨说了这么多，回到电影本身上来，其实剧情很简单，但是每一个对生活的的疑问都值得我们深思。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;本来昨天应该写的，但是昨天晚上跟老婆吵架所有的事情都没有心思去做，昨晚也差不多一宿没有睡好，到现在人还是有点不清醒，到现在才能整理思路说一下昨天看的这部电影《遗愿清单》，这部在豆瓣上评分很高的电影也确实值得我们去看，去体会，去
      
    
    </summary>
    
      <category term="影评" scheme="http://www.wuweiblog.com/categories/%E5%BD%B1%E8%AF%84/"/>
    
    
      <category term="遗愿清单，影评" scheme="http://www.wuweiblog.com/tags/%E9%81%97%E6%84%BF%E6%B8%85%E5%8D%95%EF%BC%8C%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>浮生偷闲</title>
    <link href="http://www.wuweiblog.com/2020/02/03/%E6%B5%AE%E7%94%9F%E5%81%B7%E9%97%B2/"/>
    <id>http://www.wuweiblog.com/2020/02/03/浮生偷闲/</id>
    <published>2020-02-03T03:49:41.000Z</published>
    <updated>2020-02-03T03:51:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;emm因为疫情的原因导致这个年一直都在家度过了，为了打发闲暇的时间所以宅在家的时候就一直在看电影，把以前看不下去的电影、以前没有看的电影、以前很喜欢的电影统统都准备翻出来看，最近好像是事情也比较多，所以看些电影也算放松一下吧，昨天主要看了《这个杀手不太冷》以及《指环王》系列的电影。在这里我不太想介绍剧情，毕竟是老片子，而且对于《指环王》系列的电影我也只是看了电影而已，所以也没法分析剧情，只是谈谈自己的体会罢了。<br>&nbsp;&nbsp;&nbsp;&nbsp;相比之下我更喜欢《这个杀手不太冷》而不是大家都喜欢的《指环王》系列，大家都说艺术家创造出艺术作品后这个作品就属于大家了，一千个读者有一千个哈姆雷特，从这部电影中我看到了救赎～，里昂作为一个杀手，他是专业的，他具有极高的专业素养，他冷静，镇定，身体强健；他无任何不良嗜好，甚至除了把杀手当作工作以外没有任何兴趣爱好，唯一陪伴他的只有一株绿植。作为一个杀手，他完美得无可挑剔，可是作为一个人，他是不完整的，然而上天把玛蒂尔带到了他的身边，玛蒂尔从小生活环境十分糟糕，是一个敏感、早熟、缺爱的人。这天玛蒂尔的父亲因为私藏了别人的毒品全家惨遭杀害，在危机关头里昂救下了她，于是她和里昂还有里昂的那株绿植生活在了一起，在一起生活的过程中，里昂的内心逐渐被融化，他变得快乐起来。玛蒂尔仿佛是他生活中的色彩，而与里昂的相处过程中玛蒂尔感受到了爱与关怀。<br>&nbsp;&nbsp;&nbsp;&nbsp;与玛蒂尔的相处过程中里昂完成了自我救赎，作为一个完整的人的自我救赎，在最后关头里昂看到了这个世界的光明，而实际上作为一个杀手，里昂一直生活在了黑暗之中，若非玛蒂尔，里昂对也不会有过多的对生命的向往，然而后来里昂还是死了。与我们喜欢的童话故事不同的是男女主角并没有幸福的生活在一起，然而，正是里昂的死亡才完成了他自我救赎的最后一步，作为一个杀手，他双手已经沾满了鲜血与仇恨，而作为一个正常人，他必须要用生命完成自我救赎，因此在充满希望中死去可以说是里昂最完美的归宿。而离开的玛蒂尔则重返学校开始学习，在这一段相处的过程中玛蒂尔感受到了爱，感受到了关怀，在与里昂的相处过程中她心中缺失的爱被填满，从而成长为了一个完整的人。<br>&nbsp;&nbsp;&nbsp;&nbsp;本来看电影就是图一个开心，所以我更喜欢那些搞笑的喜剧片，但是不得不说，这部电影不管是从拍摄手法，电影节奏以及整个场景来说都是极好的。就我个人来说我从里昂身上似乎看到了自己的影子，从家乡来到大城市打拼，一直努力的工作，似乎也没有什么兴趣爱好，所有精力都投入到了工作当中。总感觉我们的人生似乎缺了点什么，可能是爱，可能是认可，又可能是别的什么。不管怎么样，我们总是在完成自我的救赎，所以里昂他的痛苦，他的思考我甚至都感同身受，也许一千个读者有一千个哈姆雷特，不管怎么样，这部电影是让我感动的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;emm因为疫情的原因导致这个年一直都在家度过了，为了打发闲暇的时间所以宅在家的时候就一直在看电影，把以前看不下去的电影、以前没有看的电影、以前很喜欢的电影统统都准备翻出来看，最近好像是事情也比较多，所以看些电影也算放松一下吧，
      
    
    </summary>
    
      <category term="影评" scheme="http://www.wuweiblog.com/categories/%E5%BD%B1%E8%AF%84/"/>
    
    
      <category term="指环王，这个杀手不太冷" scheme="http://www.wuweiblog.com/tags/%E6%8C%87%E7%8E%AF%E7%8E%8B%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%9D%80%E6%89%8B%E4%B8%8D%E5%A4%AA%E5%86%B7/"/>
    
  </entry>
  
  <entry>
    <title>之子于归</title>
    <link href="http://www.wuweiblog.com/2020/02/03/%E4%B9%8B%E5%AD%90%E4%BA%8E%E5%BD%92/"/>
    <id>http://www.wuweiblog.com/2020/02/03/之子于归/</id>
    <published>2020-02-03T03:47:24.000Z</published>
    <updated>2020-02-03T03:52:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;前几天脑袋中一直有句话“之子于归，宜室宜家”，这句话来自诗经《桃夭》，可能最近谈婚论嫁的事情比较多，而自己读诗经比较少的原因吧！或者说这代表着我的愿望吧。一直觉得自己是一个很简单的人，一直记着硕士老板说的话，我们做人最终的原则应该是真诚，所以我一直对所有人都是十分真诚，我也觉得自己就是一个比较简单的人，我也只喜欢做一些简单的事情。也许是我做的不对，或者说是哪里有问题，我总是在反思，是不是哪里做的不够尽责，或者又是哪里疏忽了？<br>&nbsp;&nbsp;&nbsp;&nbsp;我今天把头像改了“之子于归”，我希望之子归能够接纳我的家人，也能够被我家人接纳，今天的沟通很不愉快，应该说这一段时间的沟通都很不愉快，我觉得有的话听起来确实是很尴尬，也很伤人。或者说极其伤人，我不知道应该有什么样的反应，我虽然心大但是不代表真的对一切的事情都觉得没有所谓，我感到很难受，感到说不出的难受，我没法把这个事情跟任何人说。不管是在自己家还是在梓萌那里，我似乎都做的不够好。一切都是我做的不够好，我不知道是不是自己缺乏处理这样问题的能力。以前的时候一直觉得婆媳矛盾我应该是能够处理的，至少也能够缓解吧，但是事实证明我的能力确实有限，似乎这一段时间以来我都做的不够好，大家都在指责我，我觉得最爱的人，最亲近的人，他们对我只有不理解和指责，一夜之间我好像变成了一个一无是处、什么都做不好的废物。我甚至都陷入了深深的自我怀疑，我不知道别人在结婚之前是不是也是有这样的情绪，我也想知道他们是如何处理这些问题的。从小到大我一直都是一个比较要强的人，我希望对每一件事都能够用尽全力，我希望能够努力处理好一切关系，我希望能够全心全意去爱一个人，我希望也有人能够全新全意的支持我、信任我、理解我。我不知道这个要求是不是太高，是不是太过分？<br>&nbsp;&nbsp;&nbsp;&nbsp;回来的时候看到亮仔跟他的女朋友一起换着开车回家，在后座上的我真的有些羡慕。前几天的时候亮仔还在跟我说买房的压力、结婚的压力，每个人好像都不抬容易，好像离婚率现在也是高的离谱，我不知道为什么大家觉得不幸福，我不知道为什么坐在后座的时候我感到他们真的很幸福，虽然睡着也只能在座位上躺一会，虽然一路都是吃的香肠泡面，虽然一路开了快二十个小时。我想想好像我很久都没有感受过这样简单的快乐了，一切的事情都压的我喘不过气来，好像一切都变得乏味，熟悉的人变得陌生，变得奇怪。这样的改变太突然了，这样的改变让我很难适应。不知道是不是所有人在婚前都会经历着么一遭，但是我好像有点累了，我有点累了，而且有点害怕，我一直跟自己说这些都能够解决，实际上可能没法解决，我都不知道要怎么面对以后的生活。<br>&nbsp;&nbsp;&nbsp;&nbsp;有些时候我在想，我是不是一个渣男，没有什么担当，也没有什么责任心，可是我不知道除了结婚我应该怎么表现出我的责任心，结婚对我来说是一件大事，但是我感觉似乎婚礼对我来说似乎也不是一件大事，我们需要仪式，但是不能依赖仪式，仪式是为了纪念而不是虚荣。今天有些话我是不喜欢的，让我感觉到似乎订的酒店，定的婚庆不够好会是一件多么丢人的事情，我甚至到现在都没有明白这个逻辑，好像是因为一个面子才需要举办婚礼，我一直觉得婚礼只是一个纪念，我甚至是觉得婚礼中最重要的事情就是那句“我愿意”而已，我不知道是不是我想的太简单，还是我活得太出世…之子于归，是一件多么美好的事情，我希望我也能更多的理解，能够更好的处理问题吧～“桃之夭夭，灼灼其华；之子于归，宜其室家！”婚礼</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前几天脑袋中一直有句话“之子于归，宜室宜家”，这句话来自诗经《桃夭》，可能最近谈婚论嫁的事情比较多，而自己读诗经比较少的原因吧！或者说这代表着我的愿望吧。一直觉得自己是一个很简单的人，一直记着硕士老板说的话，我们做人最终的原则
      
    
    </summary>
    
      <category term="随感" scheme="http://www.wuweiblog.com/categories/%E9%9A%8F%E6%84%9F/"/>
    
    
      <category term="随感" scheme="http://www.wuweiblog.com/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>大侠之死</title>
    <link href="http://www.wuweiblog.com/2020/01/04/%E5%A4%A7%E4%BE%A0%E4%B9%8B%E6%AD%BB/"/>
    <id>http://www.wuweiblog.com/2020/01/04/大侠之死/</id>
    <published>2020-01-04T03:45:30.000Z</published>
    <updated>2020-01-04T04:27:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;2019年已经过去了，实际上2019年已经过去有好几天了，本周周三就是元旦节，本来应该是在元旦那天写下这篇跨年的感受的，但是一直拖到了现在，想了一下，主要还是因为自己有拖延的毛病，其实这个毛病也不是一两天了，总是有这样的问题，总是觉得这些或者那些问题看似不重要所以就不太愿意花时间和精力去做，最后事到临头又来补救，不得不说这真是一个坏习惯，不过也就这样吧！有些毛病接受就好了，何必要强迫自己去改掉呢，本来也不过就是一个平凡的人而已，何必要为自己立下一个圣人的flag呢。<br>&nbsp;&nbsp;&nbsp;&nbsp;工作到现在已经有两年多了，实际上也才两年多，总是感觉已经工作得够久了一样，在工作之后总是感觉时间过的特别快，曾经看到过一个说法，大体的意思就是人在接触新东西的时候会觉得时间过得比较慢，当我们年龄既长，能够引起我们新鲜感的东西越来越少了，而日复一日的重复工作会让我们感觉时间流逝得特别快。我不知道这个说法是不是有道理，不过还是得承认，确实在工作之后时间过得特别得快。每次在工作中感觉自己像已经参加工作多年了一样，实际上也才不过短短两三年。今年经历的事情很多，谈婚论嫁、房子装修，每一件事情感觉都是大事，但是我都不太愿意去想，我不太喜欢流程性的东西，不过这些流程却也是不得不面对的。有时候一想到就要结婚了，我心里其实有些焦虑，感觉自己都没有把自己的生活过明白就要面临着结婚生子的问题了。其实我很想知道父母那辈是怎么想的，他们当初面临婚姻的时候是内心到底有什么样的考虑？或者那些结了婚的朋友们，他们到底是怎么想的？可能是我有点害怕吧！<br>&nbsp;&nbsp;&nbsp;&nbsp;以前的时候总是有着很牛逼的想法，总是想成为一个牛逼的人，后来年龄大了觉得自己似乎可以做一个技术大牛，能够有时间和精力去钻研一项技术，成为一个牛逼的人，到现在我发现实际上技术解决不了所有问题，或者说我的工作面临的问题并不是技术问题，或者说并不是靠着提升技术能够解决的。每一次的变化都对我的人生观造成了巨大的冲击，其实我很难适应这样的变化，不管与领导还是与同事交流，我都希望自己能够站在技术的前沿进行思考，但是慢慢我发现实际上自己做不到，在工作中似乎一直在吃老本，也许能够水几篇文章，能够做一些实验，但是已经失去了像读书时候那种精神了，太多的杂事让我心思变得很涣散，另外刷手机，以及上下班的公交也耗费了我大量的精力，在这样的情况下已经很难有精力去专注的做技术了。<br>&nbsp;&nbsp;&nbsp;&nbsp;今年的工作不如去年快乐，可能是因为面临着新的挑战，在这一年中有过很多次想要辞职，但是都忍住了冲动，可能恋爱和房贷是让我能够好好工作的两个重要的因素。学校是一个象牙塔，我们在其中其实都是不食人间烟火的大侠，后来落到了人间，大侠身上沾染了人间的烟火气，我们有了家庭，我们有了房贷，我们父母老了需要赡养父母，所以大侠被淹没在了这人间的烟火之中，慢慢死去，只剩下这一副填满的躯壳。<br>&nbsp;&nbsp;&nbsp;&nbsp;2019年妈妈过来住了一段时间，在这一段时间中我跟她好好讨论了一下关于年轻人压力以及生育情况的问题，我想她也许永远都不会明白我们这一代人所面临的压力，她只觉得我贪图享乐，不负责任。每一代人的悲喜确实都很不一样，可能她只是觉得我聒噪，而我永远觉得她沉闷。不管怎么样2019年已经成为了历史，2020年的画卷也展开了，虽然知道年只是我们人类用以记录的时间单位，但是总是需要有一个仪式与过去告别，我知道也许2020年，我的毛病依旧不会改，面临的挑战依旧不会少，但是我们并不能总生活在残酷的真相当中，我们还是需要一些仪式感来让我们对未来有所期待。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2019年已经过去了，实际上2019年已经过去有好几天了，本周周三就是元旦节，本来应该是在元旦那天写下这篇跨年的感受的，但是一直拖到了现在，想了一下，主要还是因为自己有拖延的毛病，其实这个毛病也不是一两天了，总是有这样的问题，
      
    
    </summary>
    
    
      <category term="随感" scheme="http://www.wuweiblog.com/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS绘图功能</title>
    <link href="http://www.wuweiblog.com/2019/12/03/ArcGIS%E7%BB%98%E5%9B%BE%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.wuweiblog.com/2019/12/03/ArcGIS绘图功能/</id>
    <published>2019-12-03T11:32:00.000Z</published>
    <updated>2019-12-10T02:30:50.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h3><p>&nbsp; &nbsp; &nbsp; &nbsp;在GIS应用中有一个十分重要的应用为绘图应用，一直以来基于Web的GIS在绘图方面的应用都是弱项，这其中主要问题在于Web GIS在应用过程中，所有数据都是通过浏览器进行存储和渲染，而浏览器所能够使用到的计算机资源是有限的，因此相比于给予客户端的GIS软件，基于Web GIS的应用中绘制的功能较弱，因此Web GIS更偏向于数据展示，然而随着计算机性能的发展与WebGL技术的发展，Web GIS的应用领域得到了极大的扩展，以前看起来较为复杂的绘制功能实际上也能够在浏览器端得到比较好的实现，下面我将仔细描述一下通过ArcGIS进行WebGIS应用的绘图功能。</p><h3 id="ArcGIS绘图功能说明："><a href="#ArcGIS绘图功能说明：" class="headerlink" title="ArcGIS绘图功能说明："></a>ArcGIS绘图功能说明：</h3><p>&nbsp; &nbsp; &nbsp; &nbsp;基于ArcGIS的绘图功能的实现实际上主要是通过Draw这个对象来实现的，在 <a href="https://developers.arcgis.com/javascript/latest/api-reference/esri-views-draw-Draw.html" target="_blank" rel="noopener">官网</a>上会有比较详细的Demo和说明，但是为了方便理解以及应用，我这里还是进行一些简单的总结：</p><ul><li>1 通过Sketch来实现绘图功能，实际上简单的来说就是指直接通过Sketch Widget这个控件来实现绘图功能；</li><li>2 通过Draw函数实现绘图功能；</li></ul><p>&nbsp; &nbsp; &nbsp; &nbsp;如果想要采用第一种方法进行绘制，则方法很简单，引入对应的控件，然后就能够实现画图功能，包括绘制点，线，面以及一些包括正方形，圆形在内的规则形状，同时还提供了选择、编辑以及删除绘制的图形等功能，通过此控件进行绘制主要优点在于使用简单，能够快速的搭建起一个绘制的功能，但是通过此控件进行绘图也存在着一些问题，主要问题在于无法进行定制化的应用，如果只是需要一个简单而且功能全面的绘图控件，则此控件完全符合要求，如果功能要求有较强的定制化，则此控件可能难以满足要求，另外对于完成的控件的定制化开发可能需要花费更多的时间，如果大家想要了解Sketch控件的使用，直接关注<a href="https://developers.arcgis.com/javascript/latest/sample-code/sketch-geometries/index.html" target="_blank" rel="noopener">ArcGIS的Demo网站</a>查看示例代码就可以了。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;对于大部分应用来说，直接使用空间远远满足不了应用要求，需要提供更加底层的API进行定制化的开发，这样我们就需要使用到Draw模块了。实际上这个模块的使用过程也比较简单，主要包括以下几个步骤：1.引入Draw模块；2.Draw模块与view视图进行绑定；3.定义绘制的方法；4.绘制方法d的响应；下面我们针对以上几个步骤进行分别的说明：</p><p>&nbsp; &nbsp; &nbsp; &nbsp;1.引入绘制函数：“esri/views/draw/Draw”，直接通过require模块引入绘制函数模块，然后直接定义全局绘制函数绑定view以便于进行绘制；2.Draw模块与View进行绑定，定义绘制方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> // create a new instance of draw</span><br><span class="line">var draw = new Draw(&#123;</span><br><span class="line">  view: view</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// create an instance of draw polyline action</span><br><span class="line">// the polyline vertices will be only added when</span><br><span class="line">// the pointer is clicked on the view</span><br><span class="line">var action = draw.create(&quot;polyline&quot;, &#123;mode: &quot;click&quot;&#125;);</span><br><span class="line"></span><br><span class="line">// fires when a vertex is added</span><br><span class="line">action.on(&quot;vertex-add&quot;, function (evt) &#123;</span><br><span class="line">  measureLine(evt.vertices);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// fires when the pointer moves</span><br><span class="line">action.on(&quot;cursor-update&quot;, function (evt) &#123;</span><br><span class="line">  measureLine(evt.vertices);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// fires when the drawing is completed</span><br><span class="line">action.on(&quot;draw-complete&quot;, function (evt) &#123;</span><br><span class="line">  measureLine(evt.vertices);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// fires when a vertex is removed</span><br><span class="line">action.on(&quot;vertex-remove&quot;, function (evt) &#123;</span><br><span class="line">  measureLine(evt.vertices);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">function measureLine(vertices) &#123;</span><br><span class="line">  view.graphics.removeAll();</span><br><span class="line"></span><br><span class="line">  var line = createLine(vertices);</span><br><span class="line">  var lineLength = geometryEngine.geodesicLength(line, &quot;miles&quot;);</span><br><span class="line">  var graphic = createGraphic(line);</span><br><span class="line">  view.graphics.add(graphic);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>通过action定义绘制方法，在ArcGIS中的绘制方法包括：Point，MutiPoint，Polyline，Polygon，定义绘制方法之后就需要响应绘制函数，实际上对于绘制不同的地物，对应需要响应的方法也存在差异，如果需要将绘制的结果进行保存，一般l来说我们再新建一个GraphicsLayer图层，通过此图层进行保存，将数据保存到图层中。<br>整体代码为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span> /&gt;</span><br><span class="line">    &lt;meta</span><br><span class="line">      name=<span class="string">"viewport"</span></span><br><span class="line">      content=<span class="string">"initial-scale=1,maximum-scale=1,user-scalable=no"</span></span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;title&gt;Draw polyline - <span class="number">4.13</span>&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;link</span></span><br><span class="line"><span class="regexp">      rel="stylesheet"</span></span><br><span class="line"><span class="regexp">      href="https:/</span><span class="regexp">/js.arcgis.com/</span><span class="number">4.13</span>/esri/themes/light/main.css<span class="string">"</span></span><br><span class="line"><span class="string">    /&gt;</span></span><br><span class="line"><span class="string">    &lt;script src="</span>https:<span class="comment">//js.arcgis.com/4.13/"&gt;&lt;/script&gt;</span></span><br><span class="line">    &lt;script src=<span class="string">"http://libs.baidu.com/jquery/2.1.4/jquery.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">      html,</span><br><span class="line">      body,</span><br><span class="line">      #viewDiv &#123;</span><br><span class="line">        height: <span class="number">100</span>%;</span><br><span class="line">        width: <span class="number">100</span>%;</span><br><span class="line">        margin: <span class="number">0</span>;</span><br><span class="line">        padding: <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">      require([</span></span><br><span class="line"><span class="regexp">        "esri/Map",</span></span><br><span class="line"><span class="regexp">        "esri/views/MapView",</span></span><br><span class="line"><span class="regexp">        "esri/views/draw/Draw",</span></span><br><span class="line"><span class="regexp">        "esri/Graphic",</span></span><br><span class="line"><span class="regexp">        "esri/layers/GraphicsLayer",</span></span><br><span class="line"><span class="regexp">        "esri/geometry/geometryEngine"</span></span><br><span class="line"><span class="regexp">      ], function(Map, MapView, Draw, Graphic, GraphicsLayer,geometryEngine) &#123;</span></span><br><span class="line"><span class="regexp">        const map = new Map(&#123;</span></span><br><span class="line"><span class="regexp">          basemap: "gray"</span></span><br><span class="line"><span class="regexp">        &#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const view = new MapView(&#123;</span></span><br><span class="line"><span class="regexp">          container: "viewDiv",</span></span><br><span class="line"><span class="regexp">          map: map,</span></span><br><span class="line"><span class="regexp">          zoom: 16,</span></span><br><span class="line"><span class="regexp">          center: [18.06, 59.34]</span></span><br><span class="line"><span class="regexp">        &#125;);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/var layerSave = new GraphicsLayer();</span></span><br><span class="line"><span class="regexp">        var layerSavePoint = new GraphicsLayer();</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/map.add(layerSave);</span></span><br><span class="line"><span class="regexp">        map.add(layerSavePoint);</span></span><br><span class="line"><span class="regexp">        var param=&#123;</span></span><br><span class="line"><span class="regexp">              "devType":0,</span></span><br><span class="line"><span class="regexp">              "schemeId":"07b0486b0e014b5ba80685d72dc38351"</span></span><br><span class="line"><span class="regexp">            &#125;;</span></span><br><span class="line"><span class="regexp">        $.ajax(&#123;</span></span><br><span class="line"><span class="regexp">              url: "http:/</span><span class="regexp">/192.168.43.214:8087/</span>visual/query-project-scheme-dev<span class="string">",</span></span><br><span class="line"><span class="string">              type: "</span>post<span class="string">",</span></span><br><span class="line"><span class="string">              data: JSON.stringify(param),</span></span><br><span class="line"><span class="string">              headers: &#123;</span></span><br><span class="line"><span class="string">                  'Origin':"</span>*<span class="string">",</span></span><br><span class="line"><span class="string">                  'content-type': "</span>application/json<span class="string">",</span></span><br><span class="line"><span class="string">                  // 'token': "</span>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NzQ5MjUzNzAsInVzZXJuYW1lIjoiaHowMDEifQ.P1Rzs0A6klHU6CZqBuItibpya-kfsT5kJ1w7EboJtAo<span class="string">"</span></span><br><span class="line"><span class="string">              &#125;,</span></span><br><span class="line"><span class="string">              success: function(result) &#123;  //这里就是我出错的地方</span></span><br><span class="line"><span class="string">                console.log(result.data.list[0]);</span></span><br><span class="line"><span class="string">                for(var i=0;i&lt;result.data.list.length;++i)&#123;</span></span><br><span class="line"><span class="string">                  var graphic=Graphic.fromJSON(JSON.parse(result.data.list[i]["</span>geometryInfo<span class="string">"]));</span></span><br><span class="line"><span class="string">                  layerSavePoint.graphics.add(graphic);</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">              &#125;,</span></span><br><span class="line"><span class="string">              error: function(data) &#123;</span></span><br><span class="line"><span class="string">                console.log("</span>请求出错<span class="string">");</span></span><br><span class="line"><span class="string">              &#125;</span></span><br><span class="line"><span class="string">        &#125;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // add the button for the draw tool</span></span><br><span class="line"><span class="string">        view.ui.add("</span>line-button<span class="string">", "</span>top-left<span class="string">");</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        const draw = new Draw(&#123;</span></span><br><span class="line"><span class="string">          view: view</span></span><br><span class="line"><span class="string">        &#125;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        var drawType=0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // draw polyline button</span></span><br><span class="line"><span class="string">        document.getElementById("</span>line-button<span class="string">").onclick = function() &#123;</span></span><br><span class="line"><span class="string">            const action = draw.create("</span>polyline<span class="string">");</span></span><br><span class="line"><span class="string">            action.on(</span></span><br><span class="line"><span class="string">              [</span></span><br><span class="line"><span class="string">                "</span>vertex-add<span class="string">",</span></span><br><span class="line"><span class="string">                "</span>vertex-remove<span class="string">",</span></span><br><span class="line"><span class="string">                "</span>cursor-update<span class="string">",</span></span><br><span class="line"><span class="string">                "</span>redo<span class="string">",</span></span><br><span class="line"><span class="string">                "</span>undo<span class="string">"</span></span><br><span class="line"><span class="string">              ],</span></span><br><span class="line"><span class="string">              updateVertices</span></span><br><span class="line"><span class="string">            );  </span></span><br><span class="line"><span class="string">            action.on("</span>draw-complete<span class="string">", function (evt) &#123;</span></span><br><span class="line"><span class="string">              saveLineGraphic(evt);</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">        &#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // Checks if the last vertex is making the line intersect itself.</span></span><br><span class="line"><span class="string">        function updateVertices(event) &#123;</span></span><br><span class="line"><span class="string">          // create a polyline from returned vertices</span></span><br><span class="line"><span class="string">          if (event.vertices.length &gt; 1) &#123;</span></span><br><span class="line"><span class="string">            const result = createLineGraphic(event);</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // create a new graphic presenting the polyline that is being drawn on the view</span></span><br><span class="line"><span class="string">        function createLineGraphic(event) &#123;</span></span><br><span class="line"><span class="string">            const vertices = event.vertices;</span></span><br><span class="line"><span class="string">            view.graphics.removeAll();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            // a graphic representing the polyline that is being drawn</span></span><br><span class="line"><span class="string">            const graphic = new Graphic(&#123;</span></span><br><span class="line"><span class="string">                geometry: &#123;</span></span><br><span class="line"><span class="string">                type: "</span>polyline<span class="string">",</span></span><br><span class="line"><span class="string">                paths: vertices,</span></span><br><span class="line"><span class="string">                spatialReference: view.spatialReference</span></span><br><span class="line"><span class="string">                &#125;,</span></span><br><span class="line"><span class="string">                symbol: &#123;</span></span><br><span class="line"><span class="string">                type: "</span>simple-line<span class="string">", // autocasts as new SimpleFillSymbol</span></span><br><span class="line"><span class="string">                color: [4, 90, 141],</span></span><br><span class="line"><span class="string">                width: 4,</span></span><br><span class="line"><span class="string">                cap: "</span>round<span class="string">",</span></span><br><span class="line"><span class="string">                join: "</span>round<span class="string">",</span></span><br><span class="line"><span class="string">                style: "</span>dash<span class="string">"</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">            view.graphics.add(graphic);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        function saveLineGraphic(event)&#123;</span></span><br><span class="line"><span class="string">            const vertices = event.vertices;</span></span><br><span class="line"><span class="string">            view.graphics.removeAll();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            // a graphic representing the polyline that is being drawn</span></span><br><span class="line"><span class="string">            const graphic = new Graphic(&#123;</span></span><br><span class="line"><span class="string">                geometry: &#123;</span></span><br><span class="line"><span class="string">                type: "</span>polyline<span class="string">",</span></span><br><span class="line"><span class="string">                paths: vertices,</span></span><br><span class="line"><span class="string">                spatialReference: view.spatialReference</span></span><br><span class="line"><span class="string">                &#125;,</span></span><br><span class="line"><span class="string">                symbol: &#123;</span></span><br><span class="line"><span class="string">                type: "</span>simple-line<span class="string">", // autocasts as new SimpleFillSymbol</span></span><br><span class="line"><span class="string">                color: [4, 90, 141],</span></span><br><span class="line"><span class="string">                width: 4,</span></span><br><span class="line"><span class="string">                cap: "</span>round<span class="string">",</span></span><br><span class="line"><span class="string">                join: "</span>round<span class="string">",</span></span><br><span class="line"><span class="string">                style: "</span>dash<span class="string">"</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">            layerSavePoint.graphics.add(graphic);</span></span><br><span class="line"><span class="string">            var param=&#123;</span></span><br><span class="line"><span class="string">              "</span>devType<span class="string">":0,</span></span><br><span class="line"><span class="string">              "</span>geometryInfo<span class="string">":JSON.stringify(graphic.toJSON()),</span></span><br><span class="line"><span class="string">              "</span>schemeId<span class="string">":"</span><span class="number">07</span>b0486b0e014b5ba80685d72dc38351<span class="string">"</span></span><br><span class="line"><span class="string">            &#125;;</span></span><br><span class="line"><span class="string">            $.ajax(&#123;</span></span><br><span class="line"><span class="string">              url: "</span>http:<span class="comment">//192.168.43.214:8087/visual/add-project-scheme-dev",</span></span><br><span class="line">              type: <span class="string">"post"</span>,</span><br><span class="line">              data: <span class="built_in">JSON</span>.stringify(param),</span><br><span class="line">              headers: &#123;</span><br><span class="line">                  <span class="string">'Origin'</span>:<span class="string">"*"</span>,</span><br><span class="line">                  <span class="string">'content-type'</span>: <span class="string">"application/json"</span>,</span><br><span class="line">                  <span class="comment">// 'token': "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NzQ5MjUzNzAsInVzZXJuYW1lIjoiaHowMDEifQ.P1Rzs0A6klHU6CZqBuItibpya-kfsT5kJ1w7EboJtAo"</span></span><br><span class="line">              &#125;,</span><br><span class="line">              success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;  <span class="comment">//这里就是我出错的地方</span></span><br><span class="line">                <span class="built_in">console</span>.log(result.msg);</span><br><span class="line">              &#125;,</span><br><span class="line">              error: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"请求出错"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">previewPointGraphic</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> coordinates=event.coordinates;</span><br><span class="line">            view.graphics.removeAll();</span><br><span class="line">            <span class="keyword">var</span> point = &#123;</span><br><span class="line">                type: <span class="string">"point"</span>, <span class="comment">// autocasts as /Point</span></span><br><span class="line">                x: coordinates[<span class="number">0</span>],</span><br><span class="line">                y: coordinates[<span class="number">1</span>],</span><br><span class="line">                spatialReference: view.spatialReference</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> graphic = <span class="keyword">new</span> Graphic(&#123;</span><br><span class="line">                geometry: point,</span><br><span class="line">                symbol: &#123;</span><br><span class="line">                type: <span class="string">"picture-marker"</span>, <span class="comment">// autocasts as SimpleMarkerSymbol</span></span><br><span class="line">                url: <span class="string">"https://static.arcgis.com/images/Symbols/Shapes/BlackStarLargeB.png"</span>,</span><br><span class="line">                size: <span class="string">"16px"</span>,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            view.graphics.add(graphic);            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">savePointGraphic</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> coordinates=event.coordinates;</span><br><span class="line">            view.graphics.removeAll();</span><br><span class="line">            <span class="keyword">var</span> point = &#123;</span><br><span class="line">                type: <span class="string">"point"</span>, <span class="comment">// autocasts as /Point</span></span><br><span class="line">                x: coordinates[<span class="number">0</span>],</span><br><span class="line">                y: coordinates[<span class="number">1</span>],</span><br><span class="line">                spatialReference: view.spatialReference</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> graphic = <span class="keyword">new</span> Graphic(&#123;</span><br><span class="line">                geometry: point,</span><br><span class="line">                symbol: &#123;</span><br><span class="line">                type: <span class="string">"picture-marker"</span>, <span class="comment">// autocasts as SimpleMarkerSymbol</span></span><br><span class="line">                url: <span class="string">"https://static.arcgis.com/images/Symbols/Shapes/BlackStarLargeB.png"</span>,</span><br><span class="line">                size: <span class="string">"16px"</span>,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            layerSavePoint.graphics.add(graphic);</span><br><span class="line">            <span class="keyword">var</span> param=&#123;</span><br><span class="line">              <span class="string">"devType"</span>:<span class="number">0</span>,</span><br><span class="line">              <span class="string">"geometryInfo"</span>:<span class="built_in">JSON</span>.stringify(graphic.toJSON()),</span><br><span class="line">              <span class="string">"schemeId"</span>:<span class="string">"07b0486b0e014b5ba80685d72dc38351"</span></span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">//console.log(JSON.stringify(graphic.toJSON()));</span></span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">              url: <span class="string">"http://192.168.43.214:8087/visual/add-project-scheme-dev"</span>,</span><br><span class="line">              type: <span class="string">"post"</span>,</span><br><span class="line">              data: <span class="built_in">JSON</span>.stringify(param),</span><br><span class="line">              headers: &#123;</span><br><span class="line">                  <span class="string">'Origin'</span>:<span class="string">"*"</span>,</span><br><span class="line">                  <span class="string">'content-type'</span>: <span class="string">"application/json"</span>,</span><br><span class="line">                  <span class="comment">// 'token': "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NzQ5MjUzNzAsInVzZXJuYW1lIjoiaHowMDEifQ.P1Rzs0A6klHU6CZqBuItibpya-kfsT5kJ1w7EboJtAo"</span></span><br><span class="line">              &#125;,</span><br><span class="line">              success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;  <span class="comment">//这里就是我出错的地方</span></span><br><span class="line">                <span class="built_in">console</span>.log(result.msg);</span><br><span class="line">              &#125;,</span><br><span class="line">              error: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"请求出错"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">//console.log(JSON.stringify(graphic.toJSON()));</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">"viewDiv"</span>&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        id=<span class="string">"line-button"</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span></span>=<span class="string">"esri-widget esri-widget--button esri-interactive"</span></span><br><span class="line">        title=<span class="string">"Draw polyline"</span></span><br><span class="line">      &gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"esri-icon-polyline"</span>&gt;&lt;/span&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  &lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;概述：&quot;&gt;&lt;a href=&quot;#概述：&quot; class=&quot;headerlink&quot; title=&quot;概述：&quot;&gt;&lt;/a&gt;概述：&lt;/h3&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;在GIS应用中有一个十分重要的应用为绘图应用，一直以来基于Web的GIS在绘图
      
    
    </summary>
    
      <category term="学习" scheme="http://www.wuweiblog.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="ArcGIS开发" scheme="http://www.wuweiblog.com/tags/ArcGIS%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>无所谓与焦虑</title>
    <link href="http://www.wuweiblog.com/2019/11/17/%E6%97%A0%E6%89%80%E8%B0%93%E4%B8%8E%E7%84%A6%E8%99%91/"/>
    <id>http://www.wuweiblog.com/2019/11/17/无所谓与焦虑/</id>
    <published>2019-11-17T06:07:00.000Z</published>
    <updated>2019-11-17T10:38:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp; &nbsp; &nbsp; &nbsp;最近总是觉得自己很容易就变得焦虑，对此有很多的思考，其实有很多时候，很多焦虑其实不是别人给的，而是自己给自己的，很多时候我都在想，为什么我会要觉得焦虑呢？我们生活的底线是什么，如果只是为了能够生活下去，其实我们完全可以没有太大的必要感到焦虑。但是另一个方面，其实这个社会在贩卖焦虑，在鼓励焦虑，在告诉年轻人你们需要焦虑，你们需要像工蚁一样干活。不管是“中国梦”也好，还是“社会主义伟大复兴”也罢，对于年轻人来说其实都很虚无缥缈，我们只想看见我们眼前的，我们只相信我们手中的，至于为什么这样，我想即使不说大家也明白。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;好像社会中对年轻人（也许九零后不应该算是年轻人了）充斥着两种截然不同的态度，一种是是迎合，另一种是批判。其实我觉得问题并不在于九零后，而是社会与经济的发展，实际上社会发展的常态化在于阶级之间流动性减弱，资本在人生中占据了主要作用，个人的努力在生产资料面前显得不那么重要。当社会面临这几点之后必然会出现我们所面临的困境。社会重要资源集中在上层和下层，因为上层是统治阶级，是决策者，是社会总生产资料的拥有者，所以社会资源像他们集中，而下层人民，他们是国家的主人，他们是被解放的人，他们从一无所有到一无所有，社会资源保障他们的基本诉求是为了让社会不致陷于动荡。然而所谓的中产阶层，实际上是最无力的阶层，他们没有上层人士的资源，有缺乏下层人士失去一切的勇气，由此注定了他们的软弱。所以提中产阶层这个概念我觉得在我国的大环境下最容易困扰与压榨的对象。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;而年轻人，和中产阶级就比较像，一方面望着高昂的房价，年轻人看到了资本的力量，也许一套房就是自己一生无法企及的资本，而这一切可能生来就注定了。所以很多人选择了颓废，选择去他妈的吧，既然资本让年轻人没有未来，那年轻人就干脆选择放弃未来了，我觉得这样也挺好。就让资本收割止于我们这一代就好了吧，所以年轻人就开始丧了，开始彻底的无所谓起来。但是我们的无所谓并不是真的无所谓，当机会在面前的时候还是会感到焦虑，所以处于一种二元对立的分裂当中，所以我们一边无所谓一边焦虑。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;时代的特点注定没有其他人能够体会，所以我们只能默默承受，然后面对着这个时代拔刀吧！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;最近总是觉得自己很容易就变得焦虑，对此有很多的思考，其实有很多时候，很多焦虑其实不是别人给的，而是自己给自己的，很多时候我都在想，为什么我会要觉得焦虑呢？我们生活的底线是什么，如果只是为了能够生活下去，其实我们完全可以没
      
    
    </summary>
    
      <category term="随感" scheme="http://www.wuweiblog.com/categories/%E9%9A%8F%E6%84%9F/"/>
    
    
      <category term="随感" scheme="http://www.wuweiblog.com/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>忙碌边缘</title>
    <link href="http://www.wuweiblog.com/2019/11/10/%E5%BF%99%E7%A2%8C%E8%BE%B9%E7%BC%98/"/>
    <id>http://www.wuweiblog.com/2019/11/10/忙碌边缘/</id>
    <published>2019-11-10T11:32:00.000Z</published>
    <updated>2019-11-10T12:54:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp; &nbsp; &nbsp; &nbsp;上个周末就在宿舍睡觉，这个周末也在家里平躺着休息。本来想着能够看一下书顺便整理一下自己的知识体系架构，但是好像计划的事情全部都没有做，有一点点感觉到恐慌。但是我又在想，其实我不应该恐慌才是，工作和学习（实际上我认为学习也是工作的一部分）虽然是我们生命中很重要的一部分，但是我们也没有必要因为自己有时候的休息而感到自责和惭愧，可是到底是什么原因让我感觉到因为每周这两天的休息而感到恐慌和惭愧呢？<br>&nbsp; &nbsp; &nbsp; &nbsp;虽然说我支持高考，支持目前的教育模式，但是不得不说，一直处在竞争教育模式下的我们都面临着囚徒困境，为了稀缺的资源不得不与其他人竞争，而这样的竞争导致的最大的后果是资源变得更加稀缺，我们永远不会满足。经常跟梓萌聊起她在国外生活的日子，也许是资本主义国家社会财富确实比较丰富吧，她跟我说国外的人看起来会要安逸很多，每当这个时候我就会跟她说，其实这个是社会发展的结果，等我们社会财富积累与发展之后我们也能够向他们一样安逸。这个说法听起来很有道理也很励志，但是实际上却是有着极大的问题，只要有人的地方就会有着不平等，老板就是能够比员工有着更大的话语权，也许话不是这么好听，但是道理却是很浅显的。很早之前就了解到，虽然我们社会科技与经济的发展在这一两百年内超过了过去甚至几千年发展的总和，但是人性的发展却是极其缓慢的，我们面临着的问题实际上也差不多，或许我们通过互联网能够有更大的视野，更广泛的信息来源途径，但是实际上这个社会的结构本身没有太多的改变。  </p><p>&nbsp; &nbsp; &nbsp; &nbsp;我本身是一个不太喜欢冒险的人，我总是喜欢一切尽在掌握中的感觉，但是实际上我们身处这个社会中就如同大海中的小木筏，任何一个风浪就会让我们掉入深渊，所以我感到害怕。但是换个角度想想，好像我身边就没有发现能够掌握自己命运的人，大家都是这个样子，往前是未知，往后是深渊，所以我害怕，我需要更大的船，更多的救生装备。所以我对时间的流逝感到紧张，感到害怕。但是其实生活并不应该是这个样子，前两天的时候梓萌说她回家八点能够吃到晚饭就感觉是早的了，她说她不想过这样的生活，实话说其实我也不想过这样的生活，但是我们能够过什么样的生活？回老家去拼爹好像也拼不过人家，在这里好歹还能苟活，回去就真的不知道应该怎么生活了。  </p><p>&nbsp; &nbsp; &nbsp; &nbsp;乱七八糟的想法写了很多，也没有什么太有价值的东西，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;上个周末就在宿舍睡觉，这个周末也在家里平躺着休息。本来想着能够看一下书顺便整理一下自己的知识体系架构，但是好像计划的事情全部都没有做，有一点点感觉到恐慌。但是我又在想，其实我不应该恐慌才是，工作和学习（实际上我认为学习也
      
    
    </summary>
    
      <category term="随感" scheme="http://www.wuweiblog.com/categories/%E9%9A%8F%E6%84%9F/"/>
    
    
      <category term="随感" scheme="http://www.wuweiblog.com/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>Kafka原理与应用</title>
    <link href="http://www.wuweiblog.com/2019/10/29/kafka%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    <id>http://www.wuweiblog.com/2019/10/29/kafka原理与应用/</id>
    <published>2019-10-29T08:34:08.000Z</published>
    <updated>2019-08-22T10:32:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;Kafka是最初由Linkedin公司开发，是一个分布式、支持分区的（partition）、多副本的（replica），基于zookeeper协调的分布式消息系统，它的最大的特性就是可以实时的处理大量数据以满足各种需求场景：比如基于hadoop的批处理系统、低延迟的实时系统、storm/Spark流式处理引擎，web/nginx日志、访问日志，消息服务等等，用scala语言编写，Linkedin于2010年贡献给了Apache基金会并成为顶级开源项目。提高Kafka我们首先从消息队列入手，然后再看看Kafka的架构设计存在的特点以及其应用。</p><h2 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;什么是消息队列，简单的来说消息队列（Message Queue）是一种进程间通信或同一进程的不同线程间的通信方式。消息队列可以理解为前后端的一个中间件，对于一般应用来说，由前端直接访问后端或者后端向前端推送消息，这样的模式存在着几个问题：1.前后端应用耦合性的问题；2.程序异步执行问题；3.流量控制问题；而消息队列的出现就是针对以上几个问题的一个解决方案。<br>&nbsp;&nbsp;&nbsp;&nbsp;以一个简单的例子来说明消息队列的应用场景，比如秒杀系统，在短时间内会存在大量的用户请求，这些请求如果全部都由后台来进行处理，则会导致后台压力大大提高，甚至会出现无法响应的问题，而前端用户需要等待的时间也大大延长，为了能够处理以上问题，我们通过一个消息队列快速存储所有用户消息，由于队列是一个先进先出的存储模式，因此通过消息队列的形式保证用户请求都能够请求到，然后后台逐步进行响应，从前端用户来说降低了请求无法响应的概率，同时后台也能够大大减轻服务压力。但是这样做也会出现一个问题，就是我们将用户请求发给消息队列后，用户接收到处理完成信息，但是这并不代表消息已经被处理了，因此需要重新在后台处理完消息队列后的消息后再提供反馈确认消息处理完成，当然采用消息队列虽然能够解决一些问题，但是滥用消息队列也会造成一些问题，主要包括：</p><ul><li><strong><em>系统可用性降低：</em></strong> 系统可用性在某种程度上降低，为什么这样说呢？在加入MQ之前，你不用考虑消息丢失或者说MQ挂掉等等的情况，但是，引入MQ之后你就需要去考虑了！</li><li><strong><em>系统复杂性提高：</em></strong> 加入MQ之后，你需要保证消息没有被重复消费、处理消息丢失的情况、保证消息传递的顺序性等等问题！</li><li><strong><em>一致性问题：</em></strong> 我上面讲了消息队列可以实现异步，消息队列带来的异步确实可以提高系统响应速度。但是，万一消息的真正消费者并没有正确消费消息怎么办？这样就会导致数据不一致的情况了!</li></ul><p>提出以上问题只是为了说明消息队列能够对系统负载有极大的提高，但是我们也不能忽略其带来的副作用，什么时候使用消息队列，以及如何使用需要我们仔细思考。</p><h2 id="Kafka原理说明"><a href="#Kafka原理说明" class="headerlink" title="Kafka原理说明"></a>Kafka原理说明</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;其实kafka也就是是一种消息队列，只是其在简单的消息队列的基础上进行了更加完整的架构，我们下面仔细说明一下kafka的架构信息。<br><img src="https://blogimage-1251632003.cos.ap-guangzhou.myqcloud.com/kafka%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt="kafka架构"><br>&nbsp;&nbsp;&nbsp;&nbsp;从上面的架构图中可以看到，kafka的几个特点以及几个名词，主要包括：</p><ul><li>生产者（Producer）:消息和数据生产者</li><li>代理（Broker）:缓存代理，Kafka的核心功能</li><li>消费者（Consumer）:消息和数据消费者</li></ul><p>实际上kafka的过程就是从生产者生产了数据放在Broker中，Broker承担一个中间缓存和分发的作用，负责分发注册到系统中的Consumer，实际上Consumer通过主动取数据的方式能够取到kafka中的消息，这一个整体的流程就是kafka作为一个消息队列的整个过程。在这里Broker可以看做一个服务器集群，他们通过zookeeper进行负载均衡。此外还有一些术语，包括topic，partition，以及message，kafka将消息组合为一个或多个topic进行存储，实际上topic就是某一类消息的汇总，我们可以将其理解为一个文件名，或者是一个文件描述，在topic之下有partition，partition为消息存储的实际结构，一个topic的消息可以保存到多个partition中供消费者读取，每个消息都被标识了一个递增序列号代表其进来的先后顺序，并按顺序存储在partition中。这个标识在kafka中称为id，实际上消费者能够通过id以及其偏移量进行随机的读取消息，实现了消息的灵活读取。<br>&nbsp;&nbsp;&nbsp;&nbsp;作为一个消息队列，kafka提供了消息持久化的功能，即消息能够保存到文件中进行持久化，同时kafka也支持备份机制，对于kafka来说，所有Node都提供一份完整备份，也就是说当有N个副本时，N个副本都在ISR中，N-1个副本都出现异常时，系统依然能提供服务。具体的kafka的消息持久化和备份机制可以参看<a href="https://kafka.apache.org/" target="_blank" rel="noopener">kafka官网介绍</a>。  </p><h2 id="Kafka应用实践"><a href="#Kafka应用实践" class="headerlink" title="Kafka应用实践"></a>Kafka应用实践</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;kafka做为一个消息队列，其设计是十分精巧的，但是他的使用和部署方法却是十分方便，在windows下也能够方便的进行部署和使用，正常情况下按照<a href="https://blog.csdn.net/woshixiazaizhe/article/details/80610432" target="_blank" rel="noopener">参考资料</a>都能够部署成功，但是有几个问题是需要确认的，第一个问题在于kafka的版本，在我尝试过程中3.5以上的版本在部署的过程中可能出现问题，因此建议采用3.4.X的版本部署。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Kafka是最初由Linkedin公司开发，是一个分布式、支持分区的（partition）、多副本的（replica），基于zookeeper协调的分布式消息系统，它的最大的特性就是可以实时的处理大量数据以满足各种需求场景：比
      
    
    </summary>
    
      <category term="学习" scheme="http://www.wuweiblog.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="系统架构 学习" scheme="http://www.wuweiblog.com/tags/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84-%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>矢量切片理论与实践</title>
    <link href="http://www.wuweiblog.com/2019/10/28/%E7%9F%A2%E9%87%8F%E5%88%87%E7%89%87%E7%90%86%E8%AE%BA%E4%B8%8E%E5%AE%9E%E8%B7%B5/"/>
    <id>http://www.wuweiblog.com/2019/10/28/矢量切片理论与实践/</id>
    <published>2019-10-28T02:39:09.000Z</published>
    <updated>2019-08-20T06:40:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;矢量数据则是试图利用点、线、面等几何要素来表现这个世界，其数据结构紧凑精准，数据图形质量好，有利于地理信息检索与网络传输等。其中矢量数据的最小单元是以点的形式存在，点构成线，线组成面，面构造出体。随着WebGIS的发展，对于数据展示与数据传输的要求也在不断提高，对于栅格数据来说，通过切片的方式进行动态渲染能够实现根据数据展示范围与层级的实时渲染，大大提高了数据加载效率，而对于矢量数据来说，如果矢量数据量比较大，则前端渲染则效率会出现明显下降，因此为了提高矢量数据渲染和展示能力，同时充分利用矢量数据无极缩放的能力，矢量切片的技术应运而生。</p><h2 id="矢量切片的理论基础"><a href="#矢量切片的理论基础" class="headerlink" title="矢量切片的理论基础"></a>矢量切片的理论基础</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;对于栅格数据的切片我们很好理解，通过影像采样的方式得到不同层级的影像，通过地理坐标到像素行列号的方法映射出地理坐标，相比于栅格数据切片方法，矢量数据虽然在原理上存在一定的相似性，但是由于矢量数据的特殊性，矢量切片与栅格数据切片还是存在一定的差异。<br>&nbsp;&nbsp;&nbsp;&nbsp;目前矢量切片主要有以下三种格式：GeoJSON，TopoJSON和MapbBox Vector Tile(MVT)，其中使用的比较广泛的为MVT格式，在栅格切片中每一个栅格为一张影像，影像样式无法进行修改与处理，而矢量切片，实际上是根据切片范围对矢量数据的描述进行切片，针对不同的范围加载不同的切片描述，而前端根据切片描述绘制出对应的矢量数据。实际上我个人理解为：类似影像数据，我们将矢量数据按照一定的切片规则分为不同的块，每个块能够对应一个地理范围，我们将这个地理范围内的数据以某一种绘制方式进行编码得到一个类似于影像的编码文件，前端根据展示的范围显示对应的编码块，并根据编码块进行渲染展示。</p><h2 id="矢量瓦片数据格式标准"><a href="#矢量瓦片数据格式标准" class="headerlink" title="矢量瓦片数据格式标准"></a>矢量瓦片数据格式标准</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://github.com/jingsam/vector-tile-spec/blob/master/2.1/README_zh.md" target="_blank" rel="noopener">MapbBox Vector Tile(MVT)格式标准参考</a>，实际上不同格式编码有着严格的标准，对于MVT格式来说，其标准是开源的切片标准，具体的标准格式可以参考标准文档，在这里我只对瓦片绘制的方式进行简要说明，矢量瓦片中的几何数据被定义为按照屏幕坐标绘制的形式，其中几何图形被简单的编码为指令和参数的形式（这里有点类似SVG文件但是又不太一样），具体的指令包括MoveTo，LineTo以及ClosePath，每一个指令被映射为一个编码，这样将数和ID映射到一个INT类型的数据中，其中最后3bit标识指令，前29bit标识指令执行次数，参数的编码和解码方式为：<br>$$<br>ParameterInteger = (value &lt;&lt; 1) ^ (value &gt;&gt; 31)\ value = ((ParameterInteger &gt;&gt; 1) ^ (-(ParameterInteger \&amp; 1)))<br>$$<br>得到编码和解码方式之后就可以通过一个数组来表示一个几何对象，对于不同的对象需要的操作是不同的，另外需要注意的是数据的编码是采用相对坐标的形式，每一个要素的后面数据点的坐标都是相对于前一个点来计算的，第一个点的坐标是相对于（0，0）点来计算的。<br>&nbsp;&nbsp;&nbsp;&nbsp;要素属性被编码为tag字段中的一对对整数。在每对tag中，第一个整数表示key在其所属的layer的keys列表的中索引号（以0开始）。第二个整数表示value在其所属的layer的values列表的中索引号（以0开始）。一个要素的所有key索引必须唯一，以保证要素中没有重复的属性项。每个要素的tag字段必须为偶数。要素中的tag字段包含的key索引号或value索引号必须不能大于或等于相应图层中keys或values列表中的元素数目。</p><h2 id="矢量切片生成方式"><a href="#矢量切片生成方式" class="headerlink" title="矢量切片生成方式"></a>矢量切片生成方式</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;矢量切片有很多生成方式，在这里我只介绍通过ArcGIS进行矢量切片数据的方式，ArcGIS在10.4以后就支持发布和切矢量切片了，其具体步骤为：<br>在ArcGIS Pro中构建矢量切片：  </p><ul><li>开启 ArcGIS Pro 并打开包含要发布的地图的工程。</li><li>请确保您的门户连接处于活动状态，且您已使用具有创建内容和发布托管切片图层权限的帐户登录到您的组织。</li><li>要发布切片图层，请执行以下操作之一：在内容窗格中选择这些图层。右键单击选择集，然后单击共享为 Web 图层。要在地图中发布所有图层，请在共享选项卡的共享为组中单击 Web 图层，然后单击发布 Web 图层。</li><li>输入切片图层的名称。图层默认保存到我的内容中。您可以通过输入子文件夹名称或浏览已有的文件夹将图层保存到我的内容的子文件夹中。</li><li>选择复制所有数据。</li><li>在图层类型中选择切片。这样会自动取消选中其他图层类型选项，因为复制数据时仅可选中一个选项。</li><li>提供切片图层的摘要和标签。</li><li>请指定应该访问托管切片图层的用户。发布的所有图层都会自动共享到您的组织内的个人工作空间中（我的内容），并选择共享的用户。</li><li>单击配置，然后单击配置 Web 图层属性按钮以指定缓存设置。</li><li>选择切片方案。</li><li>调整并拖拽细节层次条块来为您的切片图层指示最小和最大比例。在您更改最小和最大比例时，生成缓存的估计大小会发生改变。</li><li>选择构建切片缓存的时间和位置。</li><li>要允许用户下载地图切片以供离线使用，请选中允许客户端导出缓存切片。</li><li>如果选中了允许客户端导出缓存切片，请使用导出限制为字段指定客户端一次可离线使用的最大切片数量。</li><li>请单击内容选项卡来确认切片图层将会包含您所需的数据图层。</li><li>请单击分析来检查错误或故障。</li><li>解决错误和某些警告后，单击发布 。</li></ul><p>除了通过ArcGIS Pro构建和发布矢量切片外还可以通过ArcGIS Server通过要素服务发布和构建矢量切片，具体的方法参考<a href="https://enterprise.arcgis.com/zh-cn/portal/latest/use/publish-tiles.htm#ESRI_SECTION1_D7F82432E5DD479DA47B4C9DD657610E" target="_blank" rel="noopener">ArcGIS 官方文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;矢量数据则是试图利用点、线、面等几何要素来表现这个世界，其数据结构紧凑精准，数据图形质量好，有利于地理信息检索与网络传输等。其中矢量数据的最小单元是以点的形式存在，点构成线，线组成面，面构造出体。随着WebGIS的发展，对于数
      
    
    </summary>
    
      <category term="学习" scheme="http://www.wuweiblog.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="ArcGIS开发" scheme="http://www.wuweiblog.com/tags/ArcGIS%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>得到什么，放弃什么</title>
    <link href="http://www.wuweiblog.com/2019/09/28/%E5%BE%97%E5%88%B0%E4%BB%80%E4%B9%88%EF%BC%8C%E6%94%BE%E5%BC%83%E4%BB%80%E4%B9%88/"/>
    <id>http://www.wuweiblog.com/2019/09/28/得到什么，放弃什么/</id>
    <published>2019-09-28T01:05:07.000Z</published>
    <updated>2019-08-20T01:12:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;前几天的时候看渡鸦的故事，渡鸦是一种以腐食为主的动物，故事说渡鸦发现了一只死去的河马，但是他们的喙无法啄开河马坚硬的皮肤，所以他们去找来鬣狗帮助，鬣狗过来之后渡鸦们就在边上等候，等待把河马坚硬的皮咬开，并且吃饱之后再过去吃鬣狗们剩下的内脏等。本身这个故事并没有什么，就是说渡鸦其实是一种智商很高的生物，它们不仅会使用工具甚至会利用和训话其他动物。当然让我触动的不是他们多高的智商，毕竟作为人类，我们已经是这个星球上智商最高的动物了，让我感慨的是渡鸦们很清楚自己需要什么，自己应该放弃什么，这个其实是很难得的。<br>&nbsp;&nbsp;&nbsp;&nbsp;以前看电影的时候有句台词说小孩才做选择，成年人就会说我都要，当时觉得这句话很牛逼，把这句话奉为圭臬然后还自以为掌握了这个成年人世界的真相了，但是当自己被生活强奸了两年之后我发现，电影毕竟是电影，它不能代表这个社会运转的真相，没有人能够都要，不管是成年人还是小孩都会面临很多的选择。而在选择中我们更重要的是学会放弃，排队的时候总是觉得别人的队排的比较快，但是当我们换一个队后又发现自己原来的队突然加快了速度，这是多么痛的领悟～。我都要是本能，我们当然都希望自己能够得到所有的好东西，说出我都要这件事请并不丢人，但是我们内心应该明白，这是一件不可能的事情。<br>&nbsp;&nbsp;&nbsp;&nbsp;在这么纷繁复杂的社会中，既然无法什么都要，那我们的选择就变得十分重要了，我们自己是否真的明白我们所需要的是什么，我们真正热爱的是什么，我们能够放弃什么，我们放弃的东西是否从长久来看确实是啊没有什么意义的，我们面临生活，面临工作，面临婚姻的时候，这些都是我们所需要思考的，我们无法获得完美的生活，无法找到完美的工作，无法找到完美的伴侣，所以我们得学会放弃。<br>&nbsp;&nbsp;&nbsp;&nbsp;说起来好像大家都明白，其实做起来却并不是那么容易，毕竟对于大多数人来说损失所带来的痛苦远远大于获得所带来的快乐，所以我们一定是会讨厌放弃，厌恶失去。前几天看完了安全感这本书，从书中学到了很多，也有了很多反思，也对自己的一些行为和想法有了新的认识。阻碍我们放弃的原因有很多，但是放弃带来的不安一定是其中一个重要的原因，总是会幻想另外的路上有不一样的风景，所以我们在挣扎，在纠结，我们失去了很多快乐。为了能够更加坦荡的进行选择和放弃，我们首先要明白自己在内心深处到底希望什么，我们希望忙碌而充实的生活，在普通的岗位上默默奉献？或者我们喜欢漂泊与自由，我们能够并且愿意去体会接受变化无常，又或者我们就喜欢在我们生长的地方，与父母为伴过着悠闲的生活？每一种生活状态都有着它的美好与艰难，我们要明白自己内心到底希望的是什么，然后坚定自己的选择。以前的时候我觉得口号什么的很空洞，但是随着年龄和阅历的增长，我觉得也许对于那些大人物来说，口号不仅仅是空洞的口号，而是真正需要坚持的东西吧！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前几天的时候看渡鸦的故事，渡鸦是一种以腐食为主的动物，故事说渡鸦发现了一只死去的河马，但是他们的喙无法啄开河马坚硬的皮肤，所以他们去找来鬣狗帮助，鬣狗过来之后渡鸦们就在边上等候，等待把河马坚硬的皮咬开，并且吃饱之后再过去吃鬣狗
      
    
    </summary>
    
      <category term="随感" scheme="http://www.wuweiblog.com/categories/%E9%9A%8F%E6%84%9F/"/>
    
    
      <category term="随感" scheme="http://www.wuweiblog.com/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>瞎扯什么</title>
    <link href="http://www.wuweiblog.com/2019/09/18/%E7%9E%8E%E6%89%AF%E4%BB%80%E4%B9%88/"/>
    <id>http://www.wuweiblog.com/2019/09/18/瞎扯什么/</id>
    <published>2019-09-18T12:30:07.000Z</published>
    <updated>2019-08-12T05:34:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;在去江门的路上，由于没有赶上七点的那一班车，所以只能坐晚上八点半的车，以前的时候特别不喜欢出差，因为家里养了一条菜包狗，狗子很黏人，如果出差几天不回来的话就会害怕，所以我都不太愿意出差，即使出差也想着能够早一点回家，后来狗子也不在了，一个人生活了有一段时间，在这段时间内实际上家对我来说也就是晚上一个过夜的地方而已，这一段时间对出差还是挺喜欢的，毕竟住酒店比家里要住的舒服，而且出差还有补贴能够挣点钱。其实我也没有变，事情也没有变，但是对于出差的看法变得不一样了，这其实也是挺有意思的事情。<br>&nbsp;&nbsp;&nbsp;&nbsp;其实一个人坐在车上的时候就能够比较仔细的思考问题，对于我们自己，对于事情，对于各种各样的事情都有一些不一样的看法，听了一个脱口秀是关于孤独的，我觉得讲的还挺有意思的，我们在这诺大的城市里面，几千万的人群中，说实话不应该感到孤独，但是那个故事让我记忆很深刻，一个看坟的人，家里停电了，手机也没有电了，在茫茫的坟地里，漆黑的夜晚，他此时此刻最想的事情和最害怕的事情就是有人跟他说说话。多么有趣的故事，多么矛盾的心里。其实我们在这个几千万人的茫茫城市中所面临的大概也是同样的问题吧，我们多么想能够找人说说话，可是又多么害怕有人说说话。<br>&nbsp;&nbsp;&nbsp;&nbsp;我有时候在想，我爸妈他们在我这个年纪的时候在做什么，在想什么，他们会不会跟我一样也感觉到这么大的压力，这么困惑。每次打电话回家的时候其实都想问这个问题，但是好像又问不出口，每次跟他们想要说这个问题的时候他们总是觉得我矫情，似乎好像我现在拿着不错的薪资，又有了自己的房子，一切似乎都这么的好，似乎比他们当年幸福百倍，没到这个时候我总是无法接话，我不知道该怎么跟他们解释这个问题，好像他们说的也对，但是跟我自己的体会还是有比较大的差距。到底是我自己的体会是对的呢还是他们的看法是对的呢？这原来也是一个问题，<br>&nbsp;&nbsp;&nbsp;&nbsp;有时候想想说有钱真好，可以做自己喜欢做的事情，可是如果真的让我有钱了，又有什么事情是我能够坚持一生喜欢做的事情呢？或者我还没有做好有钱的准备？不过我觉得普通人也挺好，以前的时候爱做梦，总是希望梦到自己一夜暴富或者额突然家里很有钱，但是这个前提是我依然是我，我依然是按照我现在的生活过这一生，其实想想我对自己现在的生活好像也挺满意的，只是有好像缺了点啥一样，真是有点奇怪。有时候在想，其实写代码也算是一种创造性的工作了吧，毕竟水染我写的代码可能不够好，总是这个世界上独一无二的一段代码，总是包含了我对一个事情的理解，其中还是有些快乐的吧。<br>&nbsp;&nbsp;&nbsp;&nbsp;这两天听到我们这个业主升职了，其实我心里还是很开心，由衷的开心，因为这个业主是一个技术型的人，而不是一个管理型的人，这样的人能够得到认可，能够升职其实说明我们这个评价体系还是比较好的，这对我来说应该是一个巨大的鼓舞。有时候挺羡慕梓萌，虽然她也跟我有过吐槽，实际上其实在我眼里她是一个很幸福的人，有些时候她跟我吐槽或者我跟她说我以前打工或者做社团的经历的时候她可能只是觉得有趣，而当时的我是确确实实需要去打工挣钱，毕竟人类的悲喜并不相同。我们很难真正设身处地的想着别人，不过我们起码应该尊重别人的努力和坚持。以前看到过一篇文章《我努力了二十年才能跟你们一样坐在星巴克喝咖啡》其实我想说的是，我差不多也努力了二十年才能呢跟你们一样安心坐在星巴克不喝咖啡。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在去江门的路上，由于没有赶上七点的那一班车，所以只能坐晚上八点半的车，以前的时候特别不喜欢出差，因为家里养了一条菜包狗，狗子很黏人，如果出差几天不回来的话就会害怕，所以我都不太愿意出差，即使出差也想着能够早一点回家，后来狗子也
      
    
    </summary>
    
      <category term="随感" scheme="http://www.wuweiblog.com/categories/%E9%9A%8F%E6%84%9F/"/>
    
    
      <category term="随感" scheme="http://www.wuweiblog.com/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
</feed>
